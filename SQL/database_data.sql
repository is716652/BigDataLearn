-- 数据库数据导出
-- 导出时间: 2025-08-25 20:20:11
-- 数据库文件: DB/app.db

-- 表数据: modules
-- 导出时间: 2025-08-25 20:20:11
-- 记录数: 6

DELETE FROM modules;

INSERT INTO modules (id, title, description, ord) VALUES (1, 'Linux基础操作与环境熟悉', '掌握Linux常用命令、文件系统、权限管理与环境配置', 2);
INSERT INTO modules (id, title, description, ord) VALUES (2, 'Shell脚本基础语法与简单应用', '变量、条件判断、循环控制与函数定义', 3);
INSERT INTO modules (id, title, description, ord) VALUES (3, 'Shell脚本进阶（文件操作与进程监控）', '文件处理、进程管理、任务调度与系统监控', 4);
INSERT INTO modules (id, title, description, ord) VALUES (4, '基于Docker知识点', '容器技术、镜像管理、网络配置与Docker Compose', 5);
INSERT INTO modules (id, title, description, ord) VALUES (5, '基于Docker的Hadoop伪分布式集群搭建', 'Docker环境下Hadoop集群部署与配置实战', 6);
INSERT INTO modules (id, title, description, ord) VALUES (6, 'VMware虚拟化环境搭建', 'VMware Workstation安装配置、虚拟机创建、网络设置、端口映射与性能优化', 1);

-- 表数据: topics
-- 导出时间: 2025-08-25 20:20:11
-- 记录数: 36

DELETE FROM topics;

INSERT INTO topics (id, module_id, title, ord) VALUES (31, 2, 'Shell脚本入门与环境配置', 1);
INSERT INTO topics (id, module_id, title, ord) VALUES (32, 2, '变量定义与使用技巧', 2);
INSERT INTO topics (id, module_id, title, ord) VALUES (33, 2, '条件判断与分支控制', 3);
INSERT INTO topics (id, module_id, title, ord) VALUES (34, 2, '循环结构与流程控制', 4);
INSERT INTO topics (id, module_id, title, ord) VALUES (35, 2, '函数定义与模块化编程', 5);
INSERT INTO topics (id, module_id, title, ord) VALUES (36, 3, '高级文件操作与文本处理', 1);
INSERT INTO topics (id, module_id, title, ord) VALUES (37, 3, '进程监控与系统管理', 2);
INSERT INTO topics (id, module_id, title, ord) VALUES (38, 3, '定时任务与作业调度', 3);
INSERT INTO topics (id, module_id, title, ord) VALUES (39, 3, '网络监控与故障排查', 4);
INSERT INTO topics (id, module_id, title, ord) VALUES (40, 3, '系统性能优化脚本', 5);
INSERT INTO topics (id, module_id, title, ord) VALUES (41, 4, 'Docker基础概念与安装', 1);
INSERT INTO topics (id, module_id, title, ord) VALUES (42, 4, '镜像管理与Dockerfile', 2);
INSERT INTO topics (id, module_id, title, ord) VALUES (43, 4, '容器运行与管理', 3);
INSERT INTO topics (id, module_id, title, ord) VALUES (44, 4, '数据卷与网络配置', 4);
INSERT INTO topics (id, module_id, title, ord) VALUES (45, 4, 'Docker Compose多容器编排', 5);
INSERT INTO topics (id, module_id, title, ord) VALUES (46, 5, 'Hadoop集群架构设计', 1);
INSERT INTO topics (id, module_id, title, ord) VALUES (47, 5, 'HDFS文件系统配置', 2);
INSERT INTO topics (id, module_id, title, ord) VALUES (48, 5, 'YARN资源管理器', 3);
INSERT INTO topics (id, module_id, title, ord) VALUES (49, 5, 'MapReduce作业执行', 4);
INSERT INTO topics (id, module_id, title, ord) VALUES (50, 5, '集群监控与维护', 5);
INSERT INTO topics (id, module_id, title, ord) VALUES (53, 1, 'Linux系统概述与发行版选择', 1);
INSERT INTO topics (id, module_id, title, ord) VALUES (54, 1, '文件系统结构与目录导航', 2);
INSERT INTO topics (id, module_id, title, ord) VALUES (55, 1, '文件操作与权限管理', 3);
INSERT INTO topics (id, module_id, title, ord) VALUES (56, 1, '进程管理与系统监控', 4);
INSERT INTO topics (id, module_id, title, ord) VALUES (57, 1, '网络配置与服务管理', 5);
INSERT INTO topics (id, module_id, title, ord) VALUES (58, 6, 'VMware Workstation安装与基础配置', 1);
INSERT INTO topics (id, module_id, title, ord) VALUES (59, 6, '虚拟机创建与操作系统安装', 2);
INSERT INTO topics (id, module_id, title, ord) VALUES (60, 6, 'VMware网络模式详解与配置实战', 3);
INSERT INTO topics (id, module_id, title, ord) VALUES (61, 6, '快照管理与虚拟机克隆', 4);
INSERT INTO topics (id, module_id, title, ord) VALUES (62, 6, 'VMware Tools安装与性能优化', 5);
INSERT INTO topics (id, module_id, title, ord) VALUES (63, 6, 'VIM编辑器详解与实战应用', 6);
INSERT INTO topics (id, module_id, title, ord) VALUES (64, 1, 'VIM编辑器详解与实战应用', 6);
INSERT INTO topics (id, module_id, title, ord) VALUES (65, 1, 'vi编辑器基础操作与实用技巧', 7);
INSERT INTO topics (id, module_id, title, ord) VALUES (66, 1, 'Nano编辑器入门与高效使用', 8);
INSERT INTO topics (id, module_id, title, ord) VALUES (67, 6, 'vi编辑器基础操作与实用技巧', 7);
INSERT INTO topics (id, module_id, title, ord) VALUES (68, 6, 'Nano编辑器入门与高效使用', 8);

-- 表数据: contents
-- 导出时间: 2025-08-25 20:20:11
-- 记录数: 36

DELETE FROM contents;

INSERT INTO contents (id, topic_id, data) VALUES (31, 31, '{"title": "Shell脚本基础语法与简单应用 · 知识点1", "theory": "本节将围绕Shell脚本基础语法与简单应用的第1个知识点展开，深入讲解核心概念和实际应用。", "code": "#!/bin/bash\n# Shell脚本示例\n\n# 变量定义\nname=\"example\"\ncount=10\n\n# 条件判断\nif [ $count -gt 5 ]; then\n    echo \"Count is greater than 5\"\nfi\n\n# 循环\nfor i in {1..5}; do\n    echo \"Number: $i\"\ndone", "case": "**实际案例：**\n\n在Shell脚本基础语法与简单应用的学习中，第1个知识点的典型应用场景包括系统管理、自动化运维和大数据处理等领域。通过实际操作可以更好地理解和掌握相关技能。", "exercises": ["**理论练习：** 请用自己的话总结本节的核心概念，并说明在实际工作中的应用价值。", "**实践练习：** 根据提供的代码示例，完成一个相关的小项目或任务。", "**扩展练习：** 查阅相关资料，了解本知识点的高级用法或最佳实践。"], "images": ["https://images.unsplash.com/photo-1508780709619-79562169bc64", "https://images.unsplash.com/photo-1518779578993-ec3579fee39f"]}');
INSERT INTO contents (id, topic_id, data) VALUES (32, 32, '{"title": "Shell脚本基础语法与简单应用 · 知识点2", "theory": "本节将围绕Shell脚本基础语法与简单应用的第2个知识点展开，深入讲解核心概念和实际应用。", "code": "#!/bin/bash\n# Shell脚本示例\n\n# 变量定义\nname=\"example\"\ncount=10\n\n# 条件判断\nif [ $count -gt 5 ]; then\n    echo \"Count is greater than 5\"\nfi\n\n# 循环\nfor i in {1..5}; do\n    echo \"Number: $i\"\ndone", "case": "**实际案例：**\n\n在Shell脚本基础语法与简单应用的学习中，第2个知识点的典型应用场景包括系统管理、自动化运维和大数据处理等领域。通过实际操作可以更好地理解和掌握相关技能。", "exercises": ["**理论练习：** 请用自己的话总结本节的核心概念，并说明在实际工作中的应用价值。", "**实践练习：** 根据提供的代码示例，完成一个相关的小项目或任务。", "**扩展练习：** 查阅相关资料，了解本知识点的高级用法或最佳实践。"], "images": ["https://images.unsplash.com/photo-1518779578993-ec3579fee39f", "https://images.unsplash.com/photo-1519389950473-47ba0277781c"]}');
INSERT INTO contents (id, topic_id, data) VALUES (33, 33, '{"title": "Shell脚本基础语法与简单应用 · 知识点3", "theory": "本节将围绕Shell脚本基础语法与简单应用的第3个知识点展开，深入讲解核心概念和实际应用。", "code": "#!/bin/bash\n# Shell脚本示例\n\n# 变量定义\nname=\"example\"\ncount=10\n\n# 条件判断\nif [ $count -gt 5 ]; then\n    echo \"Count is greater than 5\"\nfi\n\n# 循环\nfor i in {1..5}; do\n    echo \"Number: $i\"\ndone", "case": "**实际案例：**\n\n在Shell脚本基础语法与简单应用的学习中，第3个知识点的典型应用场景包括系统管理、自动化运维和大数据处理等领域。通过实际操作可以更好地理解和掌握相关技能。", "exercises": ["**理论练习：** 请用自己的话总结本节的核心概念，并说明在实际工作中的应用价值。", "**实践练习：** 根据提供的代码示例，完成一个相关的小项目或任务。", "**扩展练习：** 查阅相关资料，了解本知识点的高级用法或最佳实践。"], "images": ["https://images.unsplash.com/photo-1519389950473-47ba0277781c", "https://images.unsplash.com/photo-1518779578993-ec3579fee39f"]}');
INSERT INTO contents (id, topic_id, data) VALUES (34, 34, '{"title": "Shell脚本基础语法与简单应用 · 知识点4", "theory": "本节将围绕Shell脚本基础语法与简单应用的第4个知识点展开，深入讲解核心概念和实际应用。", "code": "#!/bin/bash\n# Shell脚本示例\n\n# 变量定义\nname=\"example\"\ncount=10\n\n# 条件判断\nif [ $count -gt 5 ]; then\n    echo \"Count is greater than 5\"\nfi\n\n# 循环\nfor i in {1..5}; do\n    echo \"Number: $i\"\ndone", "case": "**实际案例：**\n\n在Shell脚本基础语法与简单应用的学习中，第4个知识点的典型应用场景包括系统管理、自动化运维和大数据处理等领域。通过实际操作可以更好地理解和掌握相关技能。", "exercises": ["**理论练习：** 请用自己的话总结本节的核心概念，并说明在实际工作中的应用价值。", "**实践练习：** 根据提供的代码示例，完成一个相关的小项目或任务。", "**扩展练习：** 查阅相关资料，了解本知识点的高级用法或最佳实践。"], "images": ["https://images.unsplash.com/photo-1518779578993-ec3579fee39f", "https://images.unsplash.com/photo-1519389950473-47ba0277781c"]}');
INSERT INTO contents (id, topic_id, data) VALUES (35, 35, '{"title": "Shell脚本基础语法与简单应用 · 知识点5", "theory": "本节将围绕Shell脚本基础语法与简单应用的第5个知识点展开，深入讲解核心概念和实际应用。", "code": "#!/bin/bash\n# Shell脚本示例\n\n# 变量定义\nname=\"example\"\ncount=10\n\n# 条件判断\nif [ $count -gt 5 ]; then\n    echo \"Count is greater than 5\"\nfi\n\n# 循环\nfor i in {1..5}; do\n    echo \"Number: $i\"\ndone", "case": "**实际案例：**\n\n在Shell脚本基础语法与简单应用的学习中，第5个知识点的典型应用场景包括系统管理、自动化运维和大数据处理等领域。通过实际操作可以更好地理解和掌握相关技能。", "exercises": ["**理论练习：** 请用自己的话总结本节的核心概念，并说明在实际工作中的应用价值。", "**实践练习：** 根据提供的代码示例，完成一个相关的小项目或任务。", "**扩展练习：** 查阅相关资料，了解本知识点的高级用法或最佳实践。"], "images": ["https://images.unsplash.com/photo-1508780709619-79562169bc64", "https://images.unsplash.com/photo-1518779578993-ec3579fee39f"]}');
INSERT INTO contents (id, topic_id, data) VALUES (36, 36, '{"title": "高级文件操作与文本处理", "theory": "Shell脚本中的高级文件操作是系统管理的核心技能。", "code": "# 文件查找和处理\nfind /var/log -name \"*.log\" -mtime +7\ngrep \"ERROR\" /var/log/app.log | tail -10\nsed -i ''s/old/new/g'' config.txt", "case": "实际应用：日志文件管理和分析系统。", "exercises": ["**理论练习：** 请用自己的话总结本节的核心概念，并说明在实际工作中的应用价值。", "**实践练习：** 根据提供的代码示例，完成一个相关的小项目或任务。", "**扩展练习：** 查阅相关资料，了解本知识点的高级用法或最佳实践。"], "images": ["https://images.unsplash.com/photo-1518779578993-ec3579fee39f", "https://images.unsplash.com/photo-1519389950473-47ba0277781c"]}');
INSERT INTO contents (id, topic_id, data) VALUES (37, 37, '{"title": "进程监控与系统管理", "theory": "进程监控是系统运维的重要组成部分。", "code": "# 进程监控\nps aux | grep nginx\ntop -p $(pgrep nginx)\nkill -9 $(pgrep defunct)", "case": "实际应用：自动化服务监控和重启。", "exercises": ["**理论练习：** 请用自己的话总结本节的核心概念，并说明在实际工作中的应用价值。", "**实践练习：** 根据提供的代码示例，完成一个相关的小项目或任务。", "**扩展练习：** 查阅相关资料，了解本知识点的高级用法或最佳实践。"], "images": ["https://images.unsplash.com/photo-1518779578993-ec3579fee39f", "https://images.unsplash.com/photo-1519389950473-47ba0277781c"]}');
INSERT INTO contents (id, topic_id, data) VALUES (38, 38, '{"title": "定时任务与作业调度", "theory": "使用cron和at命令进行任务调度。", "code": "# 定时任务\ncrontab -e\n0 2 * * * /backup/script.sh\nat now + 1 hour", "case": "实际应用：自动化备份和维护任务。", "exercises": ["**理论练习：** 请用自己的话总结本节的核心概念，并说明在实际工作中的应用价值。", "**实践练习：** 根据提供的代码示例，完成一个相关的小项目或任务。", "**扩展练习：** 查阅相关资料，了解本知识点的高级用法或最佳实践。"], "images": ["https://images.unsplash.com/photo-1518779578993-ec3579fee39f", "https://images.unsplash.com/photo-1508780709619-79562169bc64"]}');
INSERT INTO contents (id, topic_id, data) VALUES (39, 39, '{"title": "网络监控与故障排查", "theory": "网络连接监控和故障诊断技巧。", "code": "# 网络监控\nnetstat -tulpn\nss -tulpn\nping -c 4 google.com", "case": "实际应用：网络服务健康检查。", "exercises": ["**理论练习：** 请用自己的话总结本节的核心概念，并说明在实际工作中的应用价值。", "**实践练习：** 根据提供的代码示例，完成一个相关的小项目或任务。", "**扩展练习：** 查阅相关资料，了解本知识点的高级用法或最佳实践。"], "images": ["https://images.unsplash.com/photo-1519389950473-47ba0277781c", "https://images.unsplash.com/photo-1518779578993-ec3579fee39f"]}');
INSERT INTO contents (id, topic_id, data) VALUES (40, 40, '{"title": "系统性能优化脚本", "theory": "系统性能监控和优化自动化。", "code": "# 性能监控\nvmstat 1 5\niostat -x 1 5\nfree -h", "case": "实际应用：性能瓶颈自动检测。", "exercises": ["**理论练习：** 请用自己的话总结本节的核心概念，并说明在实际工作中的应用价值。", "**实践练习：** 根据提供的代码示例，完成一个相关的小项目或任务。", "**扩展练习：** 查阅相关资料，了解本知识点的高级用法或最佳实践。"], "images": ["https://images.unsplash.com/photo-1519389950473-47ba0277781c", "https://images.unsplash.com/photo-1518779578993-ec3579fee39f"]}');
INSERT INTO contents (id, topic_id, data) VALUES (41, 41, '{"title": "Docker基础概念与安装", "theory": "Docker是一个开源的容器化平台。", "code": "# Docker基础命令\ndocker --version\ndocker pull ubuntu:20.04\ndocker run hello-world", "case": "实际应用：开发环境标准化。", "exercises": ["**理论练习：** 请用自己的话总结本节的核心概念，并说明在实际工作中的应用价值。", "**实践练习：** 根据提供的代码示例，完成一个相关的小项目或任务。", "**扩展练习：** 查阅相关资料，了解本知识点的高级用法或最佳实践。"], "images": ["https://images.unsplash.com/photo-1519389950473-47ba0277781c", "https://images.unsplash.com/photo-1508780709619-79562169bc64"]}');
INSERT INTO contents (id, topic_id, data) VALUES (42, 42, '{"title": "镜像管理与Dockerfile", "theory": "Docker镜像是容器的模板。", "code": "# Dockerfile示例\nFROM ubuntu:20.04\nRUN apt-get update\nCOPY . /app", "case": "实际应用：应用容器化部署。", "exercises": ["**理论练习：** 请用自己的话总结本节的核心概念，并说明在实际工作中的应用价值。", "**实践练习：** 根据提供的代码示例，完成一个相关的小项目或任务。", "**扩展练习：** 查阅相关资料，了解本知识点的高级用法或最佳实践。"], "images": ["https://images.unsplash.com/photo-1518779578993-ec3579fee39f", "https://images.unsplash.com/photo-1519389950473-47ba0277781c"]}');
INSERT INTO contents (id, topic_id, data) VALUES (43, 43, '{"title": "容器运行与管理", "theory": "容器是镜像的运行实例。", "code": "# 容器管理\ndocker run -d nginx\ndocker ps\ndocker stop container_id", "case": "实际应用：微服务架构部署。", "exercises": ["**理论练习：** 请用自己的话总结本节的核心概念，并说明在实际工作中的应用价值。", "**实践练习：** 根据提供的代码示例，完成一个相关的小项目或任务。", "**扩展练习：** 查阅相关资料，了解本知识点的高级用法或最佳实践。"], "images": ["https://images.unsplash.com/photo-1508780709619-79562169bc64", "https://images.unsplash.com/photo-1519389950473-47ba0277781c"]}');
INSERT INTO contents (id, topic_id, data) VALUES (44, 44, '{"title": "数据卷与网络配置", "theory": "Docker的数据持久化和网络通信。", "code": "# 数据卷\ndocker volume create mydata\ndocker run -v mydata:/data nginx", "case": "实际应用：数据库容器化。", "exercises": ["**理论练习：** 请用自己的话总结本节的核心概念，并说明在实际工作中的应用价值。", "**实践练习：** 根据提供的代码示例，完成一个相关的小项目或任务。", "**扩展练习：** 查阅相关资料，了解本知识点的高级用法或最佳实践。"], "images": ["https://images.unsplash.com/photo-1518779578993-ec3579fee39f", "https://images.unsplash.com/photo-1508780709619-79562169bc64"]}');
INSERT INTO contents (id, topic_id, data) VALUES (45, 45, '{"title": "Docker Compose多容器编排", "theory": "使用Docker Compose管理多容器应用。", "code": "# docker-compose.yml\nversion: ''3''\nservices:\n  web:\n    image: nginx", "case": "实际应用：完整应用栈部署。", "exercises": ["**理论练习：** 请用自己的话总结本节的核心概念，并说明在实际工作中的应用价值。", "**实践练习：** 根据提供的代码示例，完成一个相关的小项目或任务。", "**扩展练习：** 查阅相关资料，了解本知识点的高级用法或最佳实践。"], "images": ["https://images.unsplash.com/photo-1519389950473-47ba0277781c", "https://images.unsplash.com/photo-1508780709619-79562169bc64"]}');
INSERT INTO contents (id, topic_id, data) VALUES (46, 46, '{"title": "Hadoop集群架构设计", "theory": "Hadoop分布式文件系统和计算框架。", "code": "# Hadoop配置\nexport HADOOP_HOME=/opt/hadoop\nexport PATH=$PATH:$HADOOP_HOME/bin", "case": "实际应用：大数据平台搭建。", "exercises": ["**理论练习：** 请用自己的话总结本节的核心概念，并说明在实际工作中的应用价值。", "**实践练习：** 根据提供的代码示例，完成一个相关的小项目或任务。", "**扩展练习：** 查阅相关资料，了解本知识点的高级用法或最佳实践。"], "images": ["https://images.unsplash.com/photo-1508780709619-79562169bc64", "https://images.unsplash.com/photo-1518779578993-ec3579fee39f"]}');
INSERT INTO contents (id, topic_id, data) VALUES (47, 47, '{"title": "HDFS文件系统配置", "theory": "Hadoop分布式文件系统配置。", "code": "# HDFS命令\nhdfs namenode -format\nhdfs dfs -ls /\nhdfs dfs -put file.txt /", "case": "实际应用：大数据存储管理。", "exercises": ["**理论练习：** 请用自己的话总结本节的核心概念，并说明在实际工作中的应用价值。", "**实践练习：** 根据提供的代码示例，完成一个相关的小项目或任务。", "**扩展练习：** 查阅相关资料，了解本知识点的高级用法或最佳实践。"], "images": ["https://images.unsplash.com/photo-1518779578993-ec3579fee39f", "https://images.unsplash.com/photo-1519389950473-47ba0277781c"]}');
INSERT INTO contents (id, topic_id, data) VALUES (48, 48, '{"title": "YARN资源管理器", "theory": "YARN负责集群资源管理和作业调度。", "code": "# YARN配置\nyarn-daemon.sh start resourcemanager\nyarn-daemon.sh start nodemanager", "case": "实际应用：计算资源调度。", "exercises": ["**理论练习：** 请用自己的话总结本节的核心概念，并说明在实际工作中的应用价值。", "**实践练习：** 根据提供的代码示例，完成一个相关的小项目或任务。", "**扩展练习：** 查阅相关资料，了解本知识点的高级用法或最佳实践。"], "images": ["https://images.unsplash.com/photo-1508780709619-79562169bc64", "https://images.unsplash.com/photo-1518779578993-ec3579fee39f"]}');
INSERT INTO contents (id, topic_id, data) VALUES (49, 49, '{"title": "MapReduce作业执行", "theory": "MapReduce分布式计算模型。", "code": "# MapReduce示例\nhadoop jar examples.jar wordcount input output\nhadoop fs -cat output/part-r-00000", "case": "实际应用：大数据批处理。", "exercises": ["**理论练习：** 请用自己的话总结本节的核心概念，并说明在实际工作中的应用价值。", "**实践练习：** 根据提供的代码示例，完成一个相关的小项目或任务。", "**扩展练习：** 查阅相关资料，了解本知识点的高级用法或最佳实践。"], "images": ["https://images.unsplash.com/photo-1518779578993-ec3579fee39f", "https://images.unsplash.com/photo-1508780709619-79562169bc64"]}');
INSERT INTO contents (id, topic_id, data) VALUES (50, 50, '{"title": "集群监控与维护", "theory": "Hadoop集群的监控和维护。", "code": "# 集群状态\nhdfs dfsadmin -report\nyarn node -list\nhadoop fsck /", "case": "实际应用：生产环境运维。", "exercises": ["**理论练习：** 请用自己的话总结本节的核心概念，并说明在实际工作中的应用价值。", "**实践练习：** 根据提供的代码示例，完成一个相关的小项目或任务。", "**扩展练习：** 查阅相关资料，了解本知识点的高级用法或最佳实践。"], "images": ["https://images.unsplash.com/photo-1519389950473-47ba0277781c", "https://images.unsplash.com/photo-1508780709619-79562169bc64"]}');
INSERT INTO contents (id, topic_id, data) VALUES (53, 53, '{"title": "Linux系统概述与发行版选择", "theory": "Linux是一个开源的类Unix操作系统内核，由Linus Torvalds于1991年创建。\n\n**核心概念：**\n• 内核(Kernel)：系统的核心，管理硬件资源\n• 发行版(Distribution)：基于Linux内核的完整操作系统\n• 开源特性：源代码公开，可自由修改和分发\n\n**主流发行版对比：**\n• Ubuntu：用户友好，适合初学者\n• CentOS/RHEL：企业级稳定性，广泛用于服务器\n• Debian：稳定可靠，包管理优秀\n• Arch Linux：滚动更新，高度可定制\n\n**应用场景：**\n• 服务器运维：Web服务器、数据库服务器\n• 开发环境：编程、测试、部署\n• 大数据平台：Hadoop、Spark集群部署", "code": "# 查看系统信息\nuname -a                    # 系统内核信息\ncat /etc/os-release        # 发行版信息\nlsb_release -a            # 详细版本信息\n\n# 系统资源查看\nfree -h                   # 内存使用情况\ndf -h                     # 磁盘空间\nlscpu                     # CPU信息\n\n# 进程和服务\nps aux                    # 查看所有进程\ntop                       # 实时进程监控\nsystemctl status sshd     # 查看服务状态", "case": "**案例：搭建开发环境**\n\n场景：为大数据学习搭建Ubuntu虚拟机环境\n\n步骤：\n1. 下载Ubuntu 20.04 LTS镜像\n2. 使用VirtualBox创建虚拟机（4GB内存，50GB硬盘）\n3. 安装系统，配置用户账户\n4. 更新软件源：sudo apt update && sudo apt upgrade\n5. 安装开发工具：sudo apt install vim git curl wget\n\n**实际应用：**\n• 企业通常选择CentOS作为生产环境\n• 开发团队使用Ubuntu进行日常开发\n• 容器化部署多使用Alpine Linux（轻量级）", "exercises": ["**理论练习：** 请用自己的话总结本节的核心概念，并说明在实际工作中的应用价值。", "**实践练习：** 根据提供的代码示例，完成一个相关的小项目或任务。", "**扩展练习：** 查阅相关资料，了解本知识点的高级用法或最佳实践。"], "images": ["https://images.unsplash.com/photo-1519389950473-47ba0277781c", "https://images.unsplash.com/photo-1518779578993-ec3579fee39f"]}');
INSERT INTO contents (id, topic_id, data) VALUES (54, 54, '{"title": "文件系统结构与目录导航", "theory": "Linux采用树形目录结构，所有文件和目录都从根目录(/)开始。\n\n**重要目录说明：**\n• /：根目录，所有文件的起点\n• /home：用户主目录\n• /etc：系统配置文件\n• /var：可变数据文件（日志、缓存）\n• /usr：用户程序和数据\n• /bin, /sbin：系统命令\n• /tmp：临时文件\n• /opt：第三方软件安装目录\n\n**路径概念：**\n• 绝对路径：从根目录开始，如/home/user/file.txt\n• 相对路径：从当前目录开始，如./file.txt或../parent/\n• 特殊符号：~（用户主目录）、.（当前目录）、..（上级目录）", "code": "# 目录导航命令\npwd                       # 显示当前目录\nls                        # 列出文件\nls -la                    # 详细列表（包含隐藏文件）\nls -lh                    # 人性化显示文件大小\n\n# 目录切换\ncd /home                  # 切换到指定目录\ncd ~                      # 切换到用户主目录\ncd -                      # 切换到上次访问的目录\ncd ..                     # 切换到上级目录\n\n# 目录操作\nmkdir mydir               # 创建目录\nmkdir -p path/to/dir      # 递归创建目录\nrmdir emptydir            # 删除空目录\nrm -rf dirname            # 强制删除目录及内容", "case": "**案例：组织项目目录结构**\n\n为大数据项目创建标准目录结构：\n\n```bash\n# 创建项目根目录\nmkdir -p ~/bigdata-project/{data,scripts,config,logs,output}\n\n# 进入项目目录\ncd ~/bigdata-project\n\n# 查看创建的结构\ntree .\n# 或使用 ls -la\n\n# 创建子目录\nmkdir -p data/{raw,processed,external}\nmkdir -p scripts/{etl,analysis,utils}\n```\n\n**目录规划原则：**\n• data/：存放数据文件\n• scripts/：存放脚本代码\n• config/：配置文件\n• logs/：日志文件\n• output/：输出结果", "exercises": ["**理论练习：** 请用自己的话总结本节的核心概念，并说明在实际工作中的应用价值。", "**实践练习：** 根据提供的代码示例，完成一个相关的小项目或任务。", "**扩展练习：** 查阅相关资料，了解本知识点的高级用法或最佳实践。"], "images": ["https://images.unsplash.com/photo-1519389950473-47ba0277781c", "https://images.unsplash.com/photo-1508780709619-79562169bc64"]}');
INSERT INTO contents (id, topic_id, data) VALUES (55, 55, '{"title": "文件操作与权限管理", "theory": "Linux文件权限系统是系统安全的基础，采用用户-组-其他的三级权限模型。\n\n**权限类型：**\n• r (read)：读权限，数值为4\n• w (write)：写权限，数值为2\n• x (execute)：执行权限，数值为1\n\n**权限表示：**\n• 符号表示：rwxrwxrwx（用户-组-其他）\n• 数字表示：755（7=4+2+1, 5=4+1, 5=4+1）\n\n**特殊权限：**\n• SUID：以文件所有者身份执行\n• SGID：以文件所属组身份执行\n• Sticky Bit：只有所有者可删除文件", "code": "# 文件基本操作\ntouch newfile.txt         # 创建空文件\ncp source.txt dest.txt    # 复制文件\nmv oldname.txt newname.txt # 移动/重命名\nrm filename.txt           # 删除文件\n\n# 权限查看和修改\nls -l filename            # 查看文件权限\nchmod 755 script.sh       # 数字方式设置权限\nchmod u+x script.sh       # 符号方式添加执行权限\nchmod g-w file.txt        # 移除组写权限\n\n# 所有者和组\nchown user:group file.txt # 改变所有者和组\nchown user file.txt       # 只改变所有者\nchgrp group file.txt      # 只改变组", "case": "**案例：配置Web服务器文件权限**\n\n场景：为Apache Web服务器配置正确的文件权限\n\n```bash\n# 创建网站目录结构\nsudo mkdir -p /var/www/mysite/{public,logs,config}\n\n# 设置目录权限\nsudo chmod 755 /var/www/mysite\nsudo chmod 755 /var/www/mysite/public\nsudo chmod 750 /var/www/mysite/logs\nsudo chmod 750 /var/www/mysite/config\n\n# 设置所有者\nsudo chown -R www-data:www-data /var/www/mysite\n\n# 设置文件权限\nfind /var/www/mysite -type f -exec chmod 644 {} \\;\nfind /var/www/mysite -type d -exec chmod 755 {} \\;\n```\n\n**安全原则：**\n• 最小权限原则：只给必要的权限\n• 定期审查权限设置\n• 敏感文件设置严格权限", "exercises": ["**理论练习：** 请用自己的话总结本节的核心概念，并说明在实际工作中的应用价值。", "**实践练习：** 根据提供的代码示例，完成一个相关的小项目或任务。", "**扩展练习：** 查阅相关资料，了解本知识点的高级用法或最佳实践。"], "images": ["https://images.unsplash.com/photo-1519389950473-47ba0277781c", "https://images.unsplash.com/photo-1508780709619-79562169bc64"]}');
INSERT INTO contents (id, topic_id, data) VALUES (56, 56, '{"title": "进程管理与系统监控", "theory": "Linux进程管理是系统运维的核心技能，涉及进程查看、控制和监控。\n\n**进程概念：**\n• 进程：正在运行的程序实例\n• PID：进程标识符，系统唯一\n• PPID：父进程ID\n• 进程状态：运行(R)、睡眠(S)、僵尸(Z)、停止(T)\n\n**进程优先级：**\n• Nice值：-20到19，值越小优先级越高\n• 实时优先级：0-99，用于实时进程\n\n**信号机制：**\n• SIGTERM(15)：正常终止信号\n• SIGKILL(9)：强制终止信号\n• SIGHUP(1)：挂起信号，常用于重载配置", "code": "# 进程查看\nps aux                    # 查看所有进程\nps -ef                    # 另一种格式\ntop                       # 实时进程监控\nhtop                      # 增强版top\n\n# 进程控制\nkill 1234                 # 发送TERM信号\nkill -9 1234              # 强制终止\nkillall nginx             # 按名称终止\npkill -f \"python app.py\"  # 按命令行匹配\n\n# 后台进程\nnohup python app.py &     # 后台运行\njobs                      # 查看作业\nfg %1                     # 前台运行作业1\nbg %1                     # 后台运行作业1", "case": "**案例：Web服务器进程监控脚本**\n\n创建一个监控Nginx进程的脚本：\n\n```bash\n#!/bin/bash\n# 文件名：monitor_nginx.sh\n\ncheck_nginx() {\n    if pgrep nginx > /dev/null; then\n        echo \"$(date): Nginx正在运行\"\n        # 检查进程数量\n        process_count=$(pgrep nginx | wc -l)\n        echo \"Nginx进程数: $process_count\"\n    else\n        echo \"$(date): Nginx未运行，尝试启动...\"\n        sudo systemctl start nginx\n        if [ $? -eq 0 ]; then\n            echo \"Nginx启动成功\"\n        else\n            echo \"Nginx启动失败\"\n        fi\n    fi\n}\n\n# 每30秒检查一次\nwhile true; do\n    check_nginx\n    sleep 30\ndone\n```\n\n**监控要点：**\n• 进程存活检查\n• 资源使用监控\n• 自动重启机制\n• 日志记录", "exercises": ["**理论练习：** 请用自己的话总结本节的核心概念，并说明在实际工作中的应用价值。", "**实践练习：** 根据提供的代码示例，完成一个相关的小项目或任务。", "**扩展练习：** 查阅相关资料，了解本知识点的高级用法或最佳实践。"], "images": ["https://images.unsplash.com/photo-1519389950473-47ba0277781c", "https://images.unsplash.com/photo-1508780709619-79562169bc64"]}');
INSERT INTO contents (id, topic_id, data) VALUES (57, 57, '{"title": "网络配置与服务管理", "theory": "Linux网络配置和服务管理是系统管理员必备技能，涉及网络接口、防火墙、服务管理等。\n\n**网络接口管理：**\n• 网络接口：eth0、wlan0、lo等\n• IP地址配置：静态IP和DHCP\n• 网络工具：ifconfig、ip、netstat、ss\n\n**服务管理（systemd）：**\n• 服务单元：.service文件\n• 服务状态：active、inactive、failed\n• 服务控制：start、stop、restart、reload\n\n**防火墙管理：**\n• iptables：传统防火墙工具\n• ufw：Ubuntu简化防火墙\n• firewalld：CentOS/RHEL防火墙", "code": "# 网络配置\nip addr show              # 查看网络接口\nip route show             # 查看路由表\nping -c 4 google.com      # 网络连通性测试\nnslookup google.com       # DNS查询\n\n# 网络连接\nnetstat -tulpn            # 查看监听端口\nss -tulpn                 # 现代版netstat\nlsof -i :80               # 查看端口占用\n\n# 服务管理\nsystemctl status nginx    # 查看服务状态\nsystemctl start nginx     # 启动服务\nsystemctl stop nginx      # 停止服务\nsystemctl restart nginx   # 重启服务\nsystemctl enable nginx    # 开机自启\n\n# 防火墙管理\nsudo ufw status           # 查看防火墙状态\nsudo ufw allow 80         # 允许80端口\nsudo ufw deny 22          # 拒绝22端口", "case": "**案例：配置Web服务器网络环境**\n\n场景：为生产环境配置Nginx服务器\n\n```bash\n#!/bin/bash\n# 配置脚本：setup_webserver.sh\n\n# 1. 配置静态IP（Ubuntu）\nsudo tee /etc/netplan/01-netcfg.yaml > /dev/null <<EOF\nnetwork:\n  version: 2\n  ethernets:\n    eth0:\n      dhcp4: no\n      addresses: [192.168.1.100/24]\n      gateway4: 192.168.1.1\n      nameservers:\n        addresses: [8.8.8.8, 8.8.4.4]\nEOF\n\n# 应用网络配置\nsudo netplan apply\n\n# 2. 安装和配置Nginx\nsudo apt update\nsudo apt install -y nginx\n\n# 3. 配置防火墙\nsudo ufw allow 22          # SSH\nsudo ufw allow 80          # HTTP\nsudo ufw allow 443         # HTTPS\nsudo ufw --force enable\n\n# 4. 启动服务\nsudo systemctl start nginx\nsudo systemctl enable nginx\n\necho \"Web服务器配置完成\"\n```\n\n**配置要点：**\n• 网络接口配置\n• 防火墙规则设置\n• 服务自动启动\n• 安全加固措施", "exercises": ["**理论练习：** 请用自己的话总结本节的核心概念，并说明在实际工作中的应用价值。", "**实践练习：** 根据提供的代码示例，完成一个相关的小项目或任务。", "**扩展练习：** 查阅相关资料，了解本知识点的高级用法或最佳实践。"], "images": ["https://images.unsplash.com/photo-1519389950473-47ba0277781c", "https://images.unsplash.com/photo-1518779578993-ec3579fee39f"]}');
INSERT INTO contents (id, topic_id, data) VALUES (58, 58, '{"title": "VMware Workstation安装与基础配置", "theory": "VMware Workstation是业界领先的桌面虚拟化软件，允许在单台物理机上运行多个操作系统。\n\n**核心概念：**\n• 虚拟化技术：通过软件模拟硬件环境\n• 宿主机(Host)：运行VMware的物理计算机\n• 虚拟机(Guest)：在VMware中创建的虚拟计算机\n• 快照(Snapshot)：保存虚拟机某一时刻的完整状态\n\n**系统要求：**\n• CPU：支持64位的Intel或AMD处理器\n• 内存：至少4GB RAM（推荐8GB以上）\n• 硬盘：至少1.5GB可用空间用于安装\n• 操作系统：Windows 10/11, Linux等\n\n**版本选择：**\n• VMware Workstation Pro：功能完整，适合专业用户\n• VMware Workstation Player：免费版本，功能有限\n• VMware vSphere：企业级服务器虚拟化解决方案", "code": "# VMware安装后的基本配置检查\n\n# 1. 检查虚拟化支持\n# 在Windows命令提示符中运行：\nsysteminfo | findstr /i \"hyper-v\"\n\n# 2. BIOS设置检查\n# 确保以下选项已启用：\n# - Intel VT-x 或 AMD-V\n# - Intel VT-d 或 AMD IOMMU\n\n# 3. VMware服务状态检查\n# 在服务管理器中确认以下服务正在运行：\n# - VMware Authorization Service\n# - VMware DHCP Service\n# - VMware NAT Service\n\n# 4. 网络适配器检查\n# VMware会创建虚拟网络适配器：\n# - VMware Network Adapter VMnet1 (Host-only)\n# - VMware Network Adapter VMnet8 (NAT)", "case": "**案例：为大数据学习环境安装VMware**\n\n**场景：** 在Windows 11上安装VMware Workstation Pro 17\n\n**步骤：**\n1. **下载安装包**\n   - 访问VMware官网下载最新版本\n   - 选择适合的版本（Pro或Player）\n\n2. **安装过程**\n   - 右键以管理员身份运行安装程序\n   - 接受许可协议\n   - 选择安装路径（建议默认）\n   - 配置更新设置\n\n3. **许可证激活**\n   - 输入购买的许可证密钥\n   - 或选择试用版本（30天）\n\n4. **首次启动配置**\n   - 配置客户体验改进计划\n   - 设置软件更新选项\n   - 完成初始化设置\n\n**验证安装：**\n- 启动VMware Workstation\n- 检查\"帮助\" -> \"关于\"中的版本信息\n- 确认虚拟网络编辑器可以正常打开", "exercises": ["练习1：根据VMware Workstation安装与基础配置的内容，完成相关的实践操作", "练习2：总结VMware Workstation安装与基础配置中的关键配置参数和最佳实践", "练习3：设计一个基于VMware Workstation安装与基础配置的实际应用场景"], "images": ["https://images.unsplash.com/photo-1518779578993-ec3579fee39f", "https://images.unsplash.com/photo-1519389950473-47ba0277781c"]}');
INSERT INTO contents (id, topic_id, data) VALUES (59, 59, '{"title": "虚拟机创建与操作系统安装", "theory": "创建虚拟机是使用VMware的第一步，需要合理配置硬件资源和选择合适的操作系统。\n\n**虚拟机硬件配置：**\n• CPU：根据需求分配核心数（建议不超过物理核心的50%）\n• 内存：Linux最少2GB，Windows最少4GB\n• 硬盘：动态分配vs固定大小，SCSI vs IDE\n• 网络：NAT、桥接、仅主机等模式\n\n**操作系统选择：**\n• Ubuntu 20.04/22.04 LTS：适合大数据开发\n• CentOS 7/8：企业级服务器环境\n• Windows Server：混合环境需求\n\n**安装方式：**\n• 简易安装：VMware自动化安装过程\n• 典型安装：手动控制安装步骤\n• 自定义安装：完全自定义硬件配置", "code": "# 虚拟机创建的关键配置参数\n\n# 1. 虚拟机配置文件(.vmx)示例\n# 位置：虚拟机文件夹/虚拟机名.vmx\n\n# 基本配置\nconfig.version = \"8\"\nvirtualHW.version = \"19\"\nmemSize = \"4096\"  # 内存大小(MB)\nnumvcpus = \"2\"    # CPU核心数\n\n# 硬盘配置\nscsi0.present = \"TRUE\"\nscsi0.virtualDev = \"lsilogic\"\nscsi0:0.present = \"TRUE\"\nscsi0:0.fileName = \"Ubuntu.vmdk\"\nscsi0:0.deviceType = \"scsi-hardDisk\"\n\n# 网络配置\nethernet0.present = \"TRUE\"\nethernet0.connectionType = \"nat\"\nethernet0.virtualDev = \"e1000\"\n\n# 2. VMware命令行工具\n# vmrun命令示例（需要VIX API）\nvmrun -T ws start \"path/to/vm.vmx\"\nvmrun -T ws stop \"path/to/vm.vmx\"\nvmrun -T ws suspend \"path/to/vm.vmx\"", "case": "**案例：创建Ubuntu 22.04虚拟机**\n\n**准备工作：**\n1. 下载Ubuntu 22.04 LTS ISO镜像\n2. 确保宿主机有足够的资源\n\n**创建步骤：**\n1. **新建虚拟机向导**\n   - 文件 -> 新建虚拟机\n   - 选择\"典型\"配置\n   - 选择\"稍后安装操作系统\"\n\n2. **操作系统配置**\n   - 客户机操作系统：Linux\n   - 版本：Ubuntu 64位\n   - 虚拟机名称：Ubuntu-BigData\n\n3. **硬件配置**\n   - 磁盘大小：40GB（动态分配）\n   - 内存：4GB\n   - 处理器：2核心\n\n4. **安装Ubuntu**\n   - 编辑虚拟机设置\n   - CD/DVD：使用ISO镜像文件\n   - 启动虚拟机开始安装\n\n**安装后配置：**\n- 安装VMware Tools提升性能\n- 配置网络和SSH访问\n- 创建快照保存初始状态", "exercises": ["练习1：根据虚拟机创建与操作系统安装的内容，完成相关的实践操作", "练习2：总结虚拟机创建与操作系统安装中的关键配置参数和最佳实践", "练习3：设计一个基于虚拟机创建与操作系统安装的实际应用场景"], "images": ["https://images.unsplash.com/photo-1518779578993-ec3579fee39f", "https://images.unsplash.com/photo-1519389950473-47ba0277781c"]}');
INSERT INTO contents (id, topic_id, data) VALUES (60, 60, '{"title": "VMware网络模式详解与配置实战", "theory": "VMware提供三种主要的网络连接模式，每种模式都有其独特的特点和适用场景。正确理解和配置网络模式是虚拟机与外界通信的关键。\n\n## 三种网络模式对比\n\n### 1. 桥接模式 (Bridged)\n**工作原理：**\n• 虚拟机直接连接到物理网络\n• 虚拟机获得与宿主机同网段的IP地址\n• 虚拟机在网络中表现为独立的物理设备\n\n**特点：**\n✅ 虚拟机可以直接访问局域网内其他设备\n✅ 局域网内其他设备可以直接访问虚拟机\n✅ 网络性能最佳，延迟最低\n❌ 需要额外的IP地址资源\n❌ 受网络管理员权限限制\n❌ 移动设备时需要重新配置\n\n**适用场景：**\n• 服务器虚拟化环境\n• 需要对外提供服务的虚拟机\n• 局域网内设备需要直接访问虚拟机\n\n### 2. NAT模式 (Network Address Translation)\n**工作原理：**\n• 虚拟机通过宿主机的网络地址转换访问外网\n• 虚拟机使用私有IP地址段（如192.168.x.x）\n• 宿主机充当路由器和防火墙角色\n\n**特点：**\n✅ 不需要额外的公网IP地址\n✅ 虚拟机受宿主机防火墙保护\n✅ 便于移动和迁移\n✅ 可以通过端口映射提供服务\n❌ 局域网设备无法直接访问虚拟机\n❌ 网络性能略低于桥接模式\n❌ 配置相对复杂\n\n**适用场景：**\n• 开发和测试环境\n• 个人学习和实验\n• 需要网络隔离的环境\n• 笔记本电脑上的虚拟机\n\n### 3. 仅主机模式 (Host-Only)\n**工作原理：**\n• 创建一个仅在宿主机和虚拟机之间的私有网络\n• 虚拟机无法访问外部网络\n• 只能与宿主机和同一Host-Only网络的虚拟机通信\n\n**特点：**\n✅ 完全隔离的安全环境\n✅ 不受外网环境影响\n✅ 适合搭建内部集群\n❌ 无法访问互联网\n❌ 无法与局域网其他设备通信\n❌ 功能受限\n\n**适用场景：**\n• 安全测试环境\n• 内部集群搭建\n• 离线开发环境\n• 恶意软件分析\n\n## 网络模式选择指南\n\n| 需求场景 | 推荐模式 | 原因 |\n|---------|---------|------|\n| Web服务器部署 | 桥接模式 | 需要外部直接访问 |\n| 开发测试环境 | NAT模式 | 平衡安全性和便利性 |\n| 大数据集群学习 | NAT模式 | 端口映射访问Web界面 |\n| 安全研究 | 仅主机模式 | 完全隔离环境 |\n| 多虚拟机集群 | 仅主机模式 | 内部通信，外部隔离 |", "code": "# VMware网络模式配置命令和脚本\n\n# 1. 查看和配置虚拟网络\n# 在VMware中：编辑 -> 虚拟网络编辑器\n\n# 2. 桥接模式配置\n# .vmx配置文件示例\nethernet0.present = \"TRUE\"\nethernet0.connectionType = \"bridged\"\nethernet0.virtualDev = \"e1000\"\nethernet0.wakeOnPcktRcv = \"FALSE\"\nethernet0.addressType = \"generated\"\n\n# Linux虚拟机桥接模式网络配置\n# Ubuntu Netplan配置 (/etc/netplan/01-netcfg.yaml)\nnetwork:\n  version: 2\n  ethernets:\n    ens33:\n      dhcp4: true  # 或配置静态IP\n      # addresses: [192.168.1.100/24]\n      # gateway4: 192.168.1.1\n      # nameservers:\n      #   addresses: [8.8.8.8, 8.8.4.4]\n\n# 3. NAT模式配置\n# .vmx配置文件示例\nethernet0.present = \"TRUE\"\nethernet0.connectionType = \"nat\"\nethernet0.virtualDev = \"e1000\"\nethernet0.wakeOnPcktRcv = \"FALSE\"\nethernet0.addressType = \"generated\"\n\n# NAT端口映射配置示例\n# 虚拟网络编辑器 -> VMnet8 -> NAT设置 -> 端口转发\n# 格式：主机端口 -> 虚拟机IP:端口\n\n# 常用端口映射配置\n# SSH访问\n2222 -> 192.168.100.128:22\n\n# Web服务\n8080 -> 192.168.100.128:80\n8443 -> 192.168.100.128:443\n\n# 大数据服务端口\n9870 -> 192.168.100.128:9870  # Hadoop NameNode\n8088 -> 192.168.100.128:8088  # YARN ResourceManager\n4040 -> 192.168.100.128:4040  # Spark Web UI\n8080 -> 192.168.100.128:8080  # Spark Master\n\n# 数据库服务\n3306 -> 192.168.100.128:3306  # MySQL\n5432 -> 192.168.100.128:5432  # PostgreSQL\n27017 -> 192.168.100.128:27017 # MongoDB\n\n# 4. 仅主机模式配置\n# .vmx配置文件示例\nethernet0.present = \"TRUE\"\nethernet0.connectionType = \"hostonly\"\nethernet0.virtualDev = \"e1000\"\nethernet0.wakeOnPcktRcv = \"FALSE\"\nethernet0.addressType = \"generated\"\n\n# Host-Only网络配置\n# 虚拟网络编辑器 -> VMnet1 -> 主机虚拟适配器设置\n# 子网IP: 192.168.56.0\n# 子网掩码: 255.255.255.0\n\n# 5. 网络诊断脚本\n#!/bin/bash\n# 网络连接测试脚本\n\necho \"=== VMware虚拟机网络诊断 ===\"\necho \"时间: $(date)\"\necho\n\n# 1. 网络接口信息\necho \"1. 网络接口信息:\"\nip addr show | grep -E \"^[0-9]+:|inet \"\necho\n\n# 2. 路由表\necho \"2. 路由表:\"\nip route show\necho\n\n# 3. DNS配置\necho \"3. DNS配置:\"\ncat /etc/resolv.conf\necho\n\n# 4. 连通性测试\necho \"4. 连通性测试:\"\necho \"测试网关连通性:\"\nping -c 3 $(ip route | grep default | awk ''{print $3}'') 2>/dev/null\necho\necho \"测试外网连通性:\"\nping -c 3 8.8.8.8 2>/dev/null\necho\necho \"测试域名解析:\"\nnslookup google.com 2>/dev/null\n\n# 5. 端口监听\necho \"5. 端口监听状态:\"\nss -tulpn | head -10\n\n# 6. 网络模式识别\necho \"6. 网络模式识别:\"\nGATEWAY=$(ip route | grep default | awk ''{print $3}'')\nif [[ $GATEWAY == 192.168.* ]]; then\n    if [[ $GATEWAY == *.2 ]]; then\n        echo \"检测到NAT模式 (网关: $GATEWAY)\"\n    else\n        echo \"检测到桥接模式 (网关: $GATEWAY)\"\n    fi\nelif [[ $GATEWAY == 192.168.56.* ]]; then\n    echo \"检测到仅主机模式 (网关: $GATEWAY)\"\nelse\n    echo \"未知网络模式 (网关: $GATEWAY)\"\nfi\n\n# 7. VMware Tools网络状态\necho \"7. VMware Tools网络状态:\"\nvmware-toolbox-cmd stat sessionid 2>/dev/null || echo \"VMware Tools未安装或未运行\"\n\necho \"\n=== 诊断完成 ===\"", "case": "## 实战案例：大数据学习环境网络配置\n\n### 案例1：单机开发环境（NAT模式）\n\n**场景：** 在笔记本上搭建Hadoop学习环境\n\n**需求分析：**\n- 需要访问外网下载软件包\n- 通过浏览器访问Hadoop Web界面\n- 便于携带和迁移\n- 不影响宿主机网络\n\n**配置方案：**\n\n1. **虚拟机网络设置**\n   ```\n   网络模式：NAT\n   虚拟网络：VMnet8\n   子网：192.168.100.0/24\n   网关：192.168.100.2\n   DHCP：启用\n   ```\n\n2. **端口映射配置**\n   ```\n   # Hadoop服务端口映射\n   主机端口 -> 虚拟机端口\n   9870 -> 192.168.100.128:9870   # NameNode Web UI\n   8088 -> 192.168.100.128:8088   # ResourceManager Web UI\n   19888 -> 192.168.100.128:19888 # JobHistory Server\n   \n   # 开发工具端口\n   8080 -> 192.168.100.128:8080   # Tomcat\n   3000 -> 192.168.100.128:3000   # Node.js开发服务器\n   8888 -> 192.168.100.128:8888   # Jupyter Notebook\n   \n   # 远程访问\n   2222 -> 192.168.100.128:22     # SSH\n   5901 -> 192.168.100.128:5901   # VNC\n   ```\n\n3. **虚拟机网络配置**\n   ```bash\n   # 配置静态IP（可选）\n   sudo nano /etc/netplan/01-netcfg.yaml\n   \n   network:\n     version: 2\n     ethernets:\n       ens33:\n         addresses: [192.168.100.128/24]\n         gateway4: 192.168.100.2\n         nameservers:\n           addresses: [8.8.8.8, 8.8.4.4]\n   \n   sudo netplan apply\n   ```\n\n4. **验证配置**\n   ```bash\n   # 在宿主机浏览器中访问\n   http://localhost:9870    # Hadoop NameNode\n   http://localhost:8088    # YARN ResourceManager\n   \n   # SSH连接\n   ssh -p 2222 hadoop@localhost\n   ```\n\n### 案例2：多节点集群环境（仅主机模式）\n\n**场景：** 搭建3节点Hadoop集群进行分布式计算学习\n\n**需求分析：**\n- 节点间需要相互通信\n- 模拟真实集群网络环境\n- 与外网隔离确保安全\n- 统一的网络配置\n\n**配置方案：**\n\n1. **虚拟网络规划**\n   ```\n   网络模式：仅主机模式\n   虚拟网络：VMnet1\n   子网：192.168.56.0/24\n   \n   节点IP分配：\n   - hadoop-master: 192.168.56.101\n   - hadoop-worker1: 192.168.56.102\n   - hadoop-worker2: 192.168.56.103\n   ```\n\n2. **虚拟机配置**\n   ```\n   # 每个虚拟机的.vmx文件\n   ethernet0.present = \"TRUE\"\n   ethernet0.connectionType = \"hostonly\"\n   ethernet0.virtualDev = \"e1000\"\n   ethernet0.addressType = \"static\"\n   ```\n\n3. **网络配置脚本**\n   ```bash\n   #!/bin/bash\n   # setup_cluster_network.sh\n   \n   # 配置主机名和IP映射\n   cat >> /etc/hosts << EOF\n   192.168.56.101 hadoop-master\n   192.168.56.102 hadoop-worker1\n   192.168.56.103 hadoop-worker2\n   EOF\n   \n   # 配置静态IP（根据节点调整IP地址）\n   cat > /etc/netplan/01-netcfg.yaml << EOF\n   network:\n     version: 2\n     ethernets:\n       ens33:\n         addresses: [192.168.56.101/24]  # 根据节点修改\n         nameservers:\n           addresses: [192.168.56.1]\n   EOF\n   \n   netplan apply\n   \n   # 配置SSH免密登录\n   ssh-keygen -t rsa -N \"\" -f ~/.ssh/id_rsa\n   # 将公钥复制到其他节点\n   ```\n\n4. **集群连通性测试**\n   ```bash\n   #!/bin/bash\n   # test_cluster_network.sh\n   \n   NODES=(\"hadoop-master\" \"hadoop-worker1\" \"hadoop-worker2\")\n   \n   echo \"测试集群节点连通性...\"\n   for node in \"${NODES[@]}\"; do\n       echo \"测试连接到 $node:\"\n       ping -c 3 $node\n       echo \"SSH连接测试:\"\n       ssh -o ConnectTimeout=5 $node \"hostname && date\"\n       echo \"---\"\n   done\n   ```\n\n### 案例3：生产环境模拟（桥接模式）\n\n**场景：** 模拟企业级大数据平台部署\n\n**需求分析：**\n- 需要对外提供服务\n- 局域网内其他设备需要访问\n- 模拟真实生产环境\n- 高性能网络需求\n\n**配置方案：**\n\n1. **网络规划**\n   ```\n   网络模式：桥接模式\n   物理网络：192.168.1.0/24\n   \n   服务器IP分配：\n   - bigdata-master: 192.168.1.201\n   - bigdata-worker1: 192.168.1.202\n   - bigdata-worker2: 192.168.1.203\n   - bigdata-edge: 192.168.1.204\n   ```\n\n2. **高可用配置**\n   ```bash\n   # 配置网络绑定（双网卡）\n   cat > /etc/netplan/01-netcfg.yaml << EOF\n   network:\n     version: 2\n     ethernets:\n       ens33:\n         dhcp4: false\n       ens34:\n         dhcp4: false\n     bonds:\n       bond0:\n         interfaces: [ens33, ens34]\n         addresses: [192.168.1.201/24]\n         gateway4: 192.168.1.1\n         nameservers:\n           addresses: [8.8.8.8, 8.8.4.4]\n         parameters:\n           mode: active-backup\n           primary: ens33\n   EOF\n   ```\n\n3. **防火墙配置**\n   ```bash\n   # 配置防火墙规则\n   ufw enable\n   \n   # Hadoop端口\n   ufw allow 9870    # NameNode Web UI\n   ufw allow 8088    # ResourceManager Web UI\n   ufw allow 9000    # NameNode IPC\n   \n   # Spark端口\n   ufw allow 8080    # Spark Master Web UI\n   ufw allow 4040    # Spark Application Web UI\n   \n   # 集群内部通信\n   ufw allow from 192.168.1.0/24\n   ```\n\n4. **负载均衡配置**\n   ```bash\n   # 使用Nginx做负载均衡\n   cat > /etc/nginx/sites-available/bigdata << EOF\n   upstream hadoop_namenodes {\n       server 192.168.1.201:9870;\n       server 192.168.1.202:9870 backup;\n   }\n   \n   server {\n       listen 80;\n       server_name bigdata.company.com;\n       \n       location / {\n           proxy_pass http://hadoop_namenodes;\n           proxy_set_header Host \\$host;\n           proxy_set_header X-Real-IP \\$remote_addr;\n       }\n   }\n   EOF\n   ```\n\n### 网络模式切换指南\n\n**开发阶段 → 测试阶段：**\n```\nNAT模式 → 仅主机模式\n优势：隔离测试环境，避免外部干扰\n注意：需要重新配置IP地址和主机名解析\n```\n\n**测试阶段 → 生产阶段：**\n```\n仅主机模式 → 桥接模式\n优势：真实网络环境，对外提供服务\n注意：需要申请IP地址，配置防火墙规则\n```\n\n**故障排查步骤：**\n1. 检查虚拟机网络适配器设置\n2. 验证IP地址配置\n3. 测试网关连通性\n4. 检查防火墙规则\n5. 验证DNS解析\n6. 测试端口映射（NAT模式）", "exercises": ["练习1：在VMware中分别配置桥接、NAT、仅主机三种网络模式，并测试连通性", "练习2：为NAT模式的虚拟机配置端口映射，实现外部访问Web服务", "练习3：搭建3节点仅主机模式集群，配置节点间SSH免密登录", "练习4：比较三种网络模式的性能差异，使用iperf3进行网络性能测试", "练习5：设计一个混合网络方案，同时使用多种网络模式满足不同需求"], "images": ["https://images.unsplash.com/photo-1558494949-ef010cbdcc31", "https://images.unsplash.com/photo-1544197150-b99a580bb7a8", "https://images.unsplash.com/photo-1518779578993-ec3579fee39f", "https://images.unsplash.com/photo-1519389950473-47ba0277781c", "https://images.unsplash.com/photo-1551288049-bebda4e38f71"]}');
INSERT INTO contents (id, topic_id, data) VALUES (61, 61, '{"title": "快照管理与虚拟机克隆", "theory": "快照和克隆是VMware的重要功能，用于备份、恢复和快速部署虚拟机环境。\n\n**快照功能：**\n• 保存虚拟机的完整状态（内存、设置、磁盘）\n• 支持多个快照点，形成快照树\n• 可以快速回滚到任意快照状态\n• 适用于测试、开发、培训环境\n\n**快照类型：**\n• 内存快照：包含虚拟机内存状态\n• 静默快照：不包含内存，虚拟机需关机\n• 自动快照：定时自动创建\n\n**克隆技术：**\n• 完整克隆：创建独立的虚拟机副本\n• 链接克隆：基于快照创建，节省磁盘空间\n• 模板克隆：基于预配置的虚拟机模板\n\n**最佳实践：**\n• 定期清理旧快照避免磁盘空间不足\n• 重要节点创建快照（如系统安装后、软件配置后）\n• 使用描述性名称标识快照用途", "code": "# 快照和克隆相关的VMware操作\n\n# 1. 快照管理命令（vmrun工具）\n# 创建快照\nvmrun -T ws snapshot \"path/to/vm.vmx\" \"snapshot_name\"\n\n# 恢复到快照\nvmrun -T ws revertToSnapshot \"path/to/vm.vmx\" \"snapshot_name\"\n\n# 删除快照\nvmrun -T ws deleteSnapshot \"path/to/vm.vmx\" \"snapshot_name\"\n\n# 列出所有快照\nvmrun -T ws listSnapshots \"path/to/vm.vmx\"\n\n# 2. 克隆虚拟机\n# 完整克隆（通过GUI操作）\n# 右键虚拟机 -> 管理 -> 克隆\n\n# 3. 批量快照脚本示例\n#!/bin/bash\n# 为多个虚拟机创建快照\n\nVM_LIST=(\n    \"/path/to/hadoop-master.vmx\"\n    \"/path/to/hadoop-worker1.vmx\"\n    \"/path/to/hadoop-worker2.vmx\"\n)\n\nSNAPSHOT_NAME=\"cluster-configured-$(date +%Y%m%d)\"\n\nfor vm in \"${VM_LIST[@]}\"; do\n    echo \"Creating snapshot for $vm\"\n    vmrun -T ws snapshot \"$vm\" \"$SNAPSHOT_NAME\"\ndone\n\n# 4. 虚拟机配置备份\n# 备份.vmx配置文件\ncp /path/to/vm.vmx /backup/vm-$(date +%Y%m%d).vmx\n\n# 5. 磁盘空间监控\n# 检查快照占用空间\ndu -sh /path/to/vm-folder/\nls -la *.vmdk", "case": "**案例：大数据集群环境的快照管理策略**\n\n**场景：** 管理3节点Hadoop集群的开发和测试环境\n\n**快照策略：**\n\n1. **基础环境快照**\n   - 快照名：\"01-os-installed\"\n   - 时机：操作系统安装完成后\n   - 用途：快速重建干净系统\n\n2. **软件安装快照**\n   - 快照名：\"02-java-hadoop-installed\"\n   - 时机：Java和Hadoop安装配置完成\n   - 用途：跳过软件安装步骤\n\n3. **集群配置快照**\n   - 快照名：\"03-cluster-configured\"\n   - 时机：集群配置完成，服务正常启动\n   - 用途：快速恢复可用集群\n\n4. **数据导入快照**\n   - 快照名：\"04-sample-data-loaded\"\n   - 时机：示例数据导入完成\n   - 用途：快速开始数据分析实验\n\n**克隆应用：**\n\n1. **开发环境克隆**\n   ```\n   基础虚拟机：hadoop-template\n   克隆目标：\n   - hadoop-dev1（开发者A）\n   - hadoop-dev2（开发者B）\n   - hadoop-test（测试环境）\n   ```\n\n2. **培训环境部署**\n   - 基于\"03-cluster-configured\"快照\n   - 快速为每个学员创建独立环境\n   - 统一的起始状态确保实验一致性\n\n**维护操作：**\n```bash\n# 每周清理超过30天的快照\nfind /vm-storage -name \"*.vmsd\" -mtime +30\n\n# 监控磁盘使用\ndf -h /vm-storage\n\n# 压缩虚拟磁盘\nvmware-vdiskmanager -k disk.vmdk\n```", "exercises": ["练习1：根据快照管理与虚拟机克隆的内容，完成相关的实践操作", "练习2：总结快照管理与虚拟机克隆中的关键配置参数和最佳实践", "练习3：设计一个基于快照管理与虚拟机克隆的实际应用场景"], "images": ["https://images.unsplash.com/photo-1518779578993-ec3579fee39f", "https://images.unsplash.com/photo-1519389950473-47ba0277781c"]}');
INSERT INTO contents (id, topic_id, data) VALUES (62, 62, '{"title": "VMware Tools安装与性能优化", "theory": "VMware Tools是增强虚拟机性能和功能的重要组件，提供更好的图形性能、文件共享、时间同步等功能。\n\n**VMware Tools功能：**\n• 改善图形性能和分辨率支持\n• 实现宿主机与虚拟机间的文件拖拽\n• 提供共享文件夹功能\n• 优化网络和磁盘I/O性能\n• 实现时间同步\n• 支持虚拟机的优雅关机\n\n**性能优化策略：**\n• 合理分配CPU和内存资源\n• 启用硬件加速功能\n• 优化磁盘I/O设置\n• 配置适当的网络适配器类型\n• 禁用不必要的设备和服务\n\n**监控指标：**\n• CPU使用率和等待时间\n• 内存使用和交换\n• 磁盘I/O吞吐量\n• 网络带宽利用率\n\n**故障排查：**\n• 性能问题诊断\n• 资源瓶颈识别\n• 配置优化建议", "code": "# VMware Tools安装和性能优化配置\n\n# 1. Linux系统VMware Tools安装\n# 方法1：使用发行版包管理器（推荐）\n# Ubuntu/Debian\nsudo apt update\nsudo apt install open-vm-tools open-vm-tools-desktop\n\n# CentOS/RHEL\nsudo yum install open-vm-tools open-vm-tools-desktop\n# 或者\nsudo dnf install open-vm-tools open-vm-tools-desktop\n\n# 方法2：手动安装VMware Tools\n# 在VMware菜单：虚拟机 -> 安装VMware Tools\n# 挂载ISO并安装\nsudo mkdir /mnt/cdrom\nsudo mount /dev/cdrom /mnt/cdrom\ncp /mnt/cdrom/VMwareTools-*.tar.gz /tmp/\ncd /tmp\ntar -xzf VMwareTools-*.tar.gz\ncd vmware-tools-distrib\nsudo ./vmware-install.pl\n\n# 2. 性能监控脚本\n#!/bin/bash\n# 虚拟机性能监控\n\necho \"=== VMware虚拟机性能报告 ===\"\necho \"时间: $(date)\"\necho\n\n# CPU信息\necho \"CPU使用率:\"\ntop -bn1 | grep \"Cpu(s)\" | awk ''{print $2}'' | cut -d''%'' -f1\n\n# 内存信息\necho \"内存使用情况:\"\nfree -h\n\n# 磁盘I/O\necho \"磁盘使用情况:\"\ndf -h\n\n# 网络统计\necho \"网络接口统计:\"\ncat /proc/net/dev | grep eth0\n\n# VMware Tools状态\necho \"VMware Tools状态:\"\nvmware-toolbox-cmd stat sessionid 2>/dev/null || echo \"未安装或未运行\"\n\n# 3. 虚拟机配置优化\n# .vmx文件优化参数\n\n# 内存优化\nsched.mem.pshare.enable = \"FALSE\"\nprefvmx.useRecommendedLockedMemSize = \"TRUE\"\nmemsize = \"4096\"\n\n# CPU优化\nnumvcpus = \"2\"\ncpuid.coresPerSocket = \"2\"\n\n# 磁盘优化\nscsi0.virtualDev = \"pvscsi\"  # 使用半虚拟化SCSI\ndisk.EnableUUID = \"TRUE\"\n\n# 网络优化\nethernet0.virtualDev = \"vmxnet3\"  # 使用VMXNet3适配器\n\n# 图形优化\nsvga.autodetect = \"TRUE\"\nsvga.vramSize = \"134217728\"  # 128MB显存\n\n# 4. 共享文件夹配置\n# 启用共享文件夹\nsharedFolder0.present = \"TRUE\"\nsharedFolder0.enabled = \"TRUE\"\nsharedFolder0.readAccess = \"TRUE\"\nsharedFolder0.writeAccess = \"TRUE\"\nsharedFolder0.hostPath = \"C:\\SharedData\"\nsharedFolder0.guestName = \"shared\"\nsharedFolder0.expiration = \"never\"\n\n# Linux中挂载共享文件夹\nsudo mkdir /mnt/shared\nsudo mount -t vmhgfs-fuse .host:/shared /mnt/shared -o allow_other\n\n# 开机自动挂载\necho \".host:/shared /mnt/shared vmhgfs-fuse allow_other 0 0\" | sudo tee -a /etc/fstab", "case": "**案例：优化大数据处理虚拟机性能**\n\n**场景：** 在VMware中运行Spark数据处理任务，需要优化性能\n\n**硬件配置优化：**\n\n1. **CPU配置**\n   - 分配4个vCPU（物理机8核）\n   - 启用虚拟化引擎中的\"虚拟化Intel VT-x/EPT\"\n   - 设置CPU亲和性避免资源竞争\n\n2. **内存配置**\n   - 分配8GB内存（物理机16GB）\n   - 禁用内存页面共享提高性能\n   - 预留内存避免交换\n\n3. **存储优化**\n   - 使用SSD存储虚拟机文件\n   - 选择PVSCSI适配器\n   - 预分配磁盘空间\n   - 禁用磁盘碎片整理\n\n**软件配置优化：**\n\n1. **操作系统调优**\n   ```bash\n   # 调整虚拟内存\n   echo ''vm.swappiness=10'' >> /etc/sysctl.conf\n   \n   # 优化网络参数\n   echo ''net.core.rmem_max = 134217728'' >> /etc/sysctl.conf\n   echo ''net.core.wmem_max = 134217728'' >> /etc/sysctl.conf\n   \n   # 应用配置\n   sysctl -p\n   ```\n\n2. **Spark配置优化**\n   ```bash\n   # spark-defaults.conf\n   spark.executor.memory=2g\n   spark.executor.cores=2\n   spark.sql.adaptive.enabled=true\n   spark.sql.adaptive.coalescePartitions.enabled=true\n   ```\n\n**监控和调优：**\n\n1. **性能基线测试**\n   ```bash\n   # CPU基准测试\n   sysbench cpu --cpu-max-prime=20000 run\n   \n   # 内存测试\n   sysbench memory --memory-total-size=10G run\n   \n   # 磁盘I/O测试\n   dd if=/dev/zero of=testfile bs=1G count=1 oflag=direct\n   ```\n\n2. **实时监控**\n   - 使用htop监控CPU和内存\n   - 使用iotop监控磁盘I/O\n   - 使用nethogs监控网络使用\n\n**结果验证：**\n- Spark作业执行时间减少30%\n- 系统响应性显著提升\n- 资源利用率更加均衡\n\n**维护建议：**\n- 定期清理临时文件\n- 监控虚拟机资源使用趋势\n- 根据工作负载调整资源分配", "exercises": ["练习1：根据VMware Tools安装与性能优化的内容，完成相关的实践操作", "练习2：总结VMware Tools安装与性能优化中的关键配置参数和最佳实践", "练习3：设计一个基于VMware Tools安装与性能优化的实际应用场景"], "images": ["https://images.unsplash.com/photo-1518779578993-ec3579fee39f", "https://images.unsplash.com/photo-1519389950473-47ba0277781c"]}');
INSERT INTO contents (id, topic_id, data) VALUES (63, 63, '{"title": "VIM编辑器详解与实战应用", "theory": "VIM（Vi IMproved）是Linux系统中最强大的文本编辑器之一，是系统管理员和开发者必备工具。VIM具有高效的编辑能力和丰富的功能。\n\n**VIM的三种模式：**\n• 命令模式（Normal Mode）：默认模式，用于导航和执行命令\n• 插入模式（Insert Mode）：用于输入和编辑文本\n• 可视模式（Visual Mode）：用于选择文本块\n\n**VIM的优势：**\n• 高效的键盘操作，无需鼠标\n• 强大的搜索和替换功能\n• 支持正则表达式\n• 可扩展性强，支持插件\n• 在所有Unix/Linux系统中都可用\n\n**基本概念：**\n• 光标移动：h(左) j(下) k(上) l(右)\n• 文本对象：单词(w)、行(l)、段落(p)\n• 操作符：删除(d)、复制(y)、粘贴(p)\n• 组合操作：操作符+文本对象，如dw(删除单词)", "code": "# VIM基础操作\n\n# 启动VIM\nvim filename.txt          # 打开文件\nvim +10 file.txt         # 打开文件并跳到第10行\nvim +/pattern file.txt   # 打开文件并搜索pattern\n\n# 模式切换\ni                        # 进入插入模式（光标前）\na                        # 进入插入模式（光标后）\nA                        # 进入插入模式（行尾）\no                        # 新建行并进入插入模式\nO                        # 在上方新建行并进入插入模式\nEsc                      # 返回命令模式\n\n# 光标移动\nh j k l                  # 左下上右\nw                        # 下一个单词开头\nb                        # 上一个单词开头\ne                        # 单词结尾\n0                        # 行首\n$                        # 行尾\ngg                       # 文件开头\nG                        # 文件结尾\n:10                      # 跳到第10行\n\n# 文本编辑\nx                        # 删除当前字符\ndw                       # 删除单词\ndd                       # 删除整行\n3dd                      # 删除3行\nyy                       # 复制当前行\n3yy                      # 复制3行\np                        # 粘贴\nu                        # 撤销\nCtrl+r                   # 重做\n\n# 搜索和替换\n/pattern                 # 向下搜索\n?pattern                 # 向上搜索\nn                        # 下一个匹配\nN                        # 上一个匹配\n:s/old/new/              # 替换当前行第一个\n:s/old/new/g             # 替换当前行所有\n:%s/old/new/g            # 替换全文所有\n:%s/old/new/gc           # 替换全文所有（确认）\n\n# 文件操作\n:w                       # 保存\n:w filename              # 另存为\n:q                       # 退出\n:q!                      # 强制退出不保存\n:wq                      # 保存并退出\n:x                       # 保存并退出（同:wq）", "case": "**案例：使用VIM进行系统配置文件编辑**\n\n场景：编辑Nginx配置文件并进行批量修改\n\n```bash\n# 1. 备份原配置文件\nsudo cp /etc/nginx/nginx.conf /etc/nginx/nginx.conf.bak\n\n# 2. 使用VIM编辑配置文件\nsudo vim /etc/nginx/nginx.conf\n\n# 在VIM中的操作步骤：\n# - 按 / 搜索 \"worker_processes\"\n# - 按 n 找到下一个匹配\n# - 按 cw 删除单词并进入插入模式\n# - 输入新值 \"auto\"\n# - 按 Esc 返回命令模式\n# - 输入 :%s/server_name localhost/server_name example.com/g\n# - 按回车执行全局替换\n# - 输入 :wq 保存并退出\n```\n\n**VIM实用技巧：**\n\n1. **快速编辑多个文件：**\n```bash\nvim file1.txt file2.txt file3.txt\n:next                    # 下一个文件\n:prev                    # 上一个文件\n:buffers                 # 查看缓冲区\n:b2                      # 切换到缓冲区2\n```\n\n2. **使用标记进行快速跳转：**\n```bash\nma                       # 在当前位置设置标记a\n`a                       # 跳转到标记a\n```\n\n3. **分屏操作：**\n```bash\n:split                   # 水平分屏\n:vsplit                  # 垂直分屏\nCtrl+w h/j/k/l          # 在分屏间移动\n```\n\n4. **批量操作：**\n```bash\n# 在多行前添加注释\n1. Ctrl+v 进入可视块模式\n2. j 选择多行\n3. I 进入插入模式\n4. 输入 \"# \"\n5. Esc 应用到所有选中行\n```\n\n**VIM配置文件示例（~/.vimrc）：**\n```bash\n# 基础配置\nset number               # 显示行号\nset tabstop=4           # Tab宽度\nset shiftwidth=4        # 缩进宽度\nset expandtab           # Tab转空格\nset hlsearch            # 高亮搜索\nset incsearch           # 增量搜索\nset ignorecase          # 忽略大小写\nset smartcase           # 智能大小写\nset autoindent          # 自动缩进\nset syntax=on           # 语法高亮\n\n# 快捷键映射\nmap <F2> :w<CR>         # F2保存\nmap <F3> :q<CR>         # F3退出\n```\n\n**生产环境应用：**\n• 服务器配置文件编辑\n• 日志文件分析和处理\n• 脚本开发和调试\n• 代码审查和修改\n• 批量文本处理任务", "exercises": ["**理论练习：** 请用自己的话总结本节的核心概念，并说明在实际工作中的应用价值。", "**实践练习：** 根据提供的代码示例，完成一个相关的小项目或任务。", "**扩展练习：** 查阅相关资料，了解本知识点的高级用法或最佳实践。"], "images": ["https://images.unsplash.com/photo-1518779578993-ec3579fee39f", "https://images.unsplash.com/photo-1508780709619-79562169bc64"]}');
INSERT INTO contents (id, topic_id, data) VALUES (64, 64, '{"title": "VIM编辑器详解与实战应用", "theory": "VIM（Vi IMproved）是Linux系统中最强大的文本编辑器之一，是系统管理员和开发者必备工具。VIM具有高效的编辑能力和丰富的功能。\n\n**VIM的三种模式：**\n• 命令模式（Normal Mode）：默认模式，用于导航和执行命令\n• 插入模式（Insert Mode）：用于输入和编辑文本\n• 可视模式（Visual Mode）：用于选择文本块\n\n**VIM的优势：**\n• 高效的键盘操作，无需鼠标\n• 强大的搜索和替换功能\n• 支持正则表达式\n• 可扩展性强，支持插件\n• 在所有Unix/Linux系统中都可用\n\n**基本概念：**\n• 光标移动：h(左) j(下) k(上) l(右)\n• 文本对象：单词(w)、行(l)、段落(p)\n• 操作符：删除(d)、复制(y)、粘贴(p)\n• 组合操作：操作符+文本对象，如dw(删除单词)", "code": "# VIM基础操作\n\n# 启动VIM\nvim filename.txt          # 打开文件\nvim +10 file.txt         # 打开文件并跳到第10行\nvim +/pattern file.txt   # 打开文件并搜索pattern\n\n# 模式切换\ni                        # 进入插入模式（光标前）\na                        # 进入插入模式（光标后）\nA                        # 进入插入模式（行尾）\no                        # 新建行并进入插入模式\nO                        # 在上方新建行并进入插入模式\nEsc                      # 返回命令模式\n\n# 光标移动\nh j k l                  # 左下上右\nw                        # 下一个单词开头\nb                        # 上一个单词开头\ne                        # 单词结尾\n0                        # 行首\n$                        # 行尾\ngg                       # 文件开头\nG                        # 文件结尾\n:10                      # 跳到第10行\n\n# 文本编辑\nx                        # 删除当前字符\ndw                       # 删除单词\ndd                       # 删除整行\n3dd                      # 删除3行\nyy                       # 复制当前行\n3yy                      # 复制3行\np                        # 粘贴\nu                        # 撤销\nCtrl+r                   # 重做\n\n# 搜索和替换\n/pattern                 # 向下搜索\n?pattern                 # 向上搜索\nn                        # 下一个匹配\nN                        # 上一个匹配\n:s/old/new/              # 替换当前行第一个\n:s/old/new/g             # 替换当前行所有\n:%s/old/new/g            # 替换全文所有\n:%s/old/new/gc           # 替换全文所有（确认）\n\n# 文件操作\n:w                       # 保存\n:w filename              # 另存为\n:q                       # 退出\n:q!                      # 强制退出不保存\n:wq                      # 保存并退出\n:x                       # 保存并退出（同:wq）", "case": "**案例：使用VIM进行系统配置文件编辑**\n\n场景：编辑Nginx配置文件并进行批量修改\n\n```bash\n# 1. 备份原配置文件\nsudo cp /etc/nginx/nginx.conf /etc/nginx/nginx.conf.bak\n\n# 2. 使用VIM编辑配置文件\nsudo vim /etc/nginx/nginx.conf\n\n# 在VIM中的操作步骤：\n# - 按 / 搜索 \"worker_processes\"\n# - 按 n 找到下一个匹配\n# - 按 cw 删除单词并进入插入模式\n# - 输入新值 \"auto\"\n# - 按 Esc 返回命令模式\n# - 输入 :%s/server_name localhost/server_name example.com/g\n# - 按回车执行全局替换\n# - 输入 :wq 保存并退出\n```\n\n**VIM实用技巧：**\n\n1. **快速编辑多个文件：**\n```bash\nvim file1.txt file2.txt file3.txt\n:next                    # 下一个文件\n:prev                    # 上一个文件\n:buffers                 # 查看缓冲区\n:b2                      # 切换到缓冲区2\n```\n\n2. **使用标记进行快速跳转：**\n```bash\nma                       # 在当前位置设置标记a\n`a                       # 跳转到标记a\n```\n\n3. **分屏操作：**\n```bash\n:split                   # 水平分屏\n:vsplit                  # 垂直分屏\nCtrl+w h/j/k/l          # 在分屏间移动\n```\n\n4. **批量操作：**\n```bash\n# 在多行前添加注释\n1. Ctrl+v 进入可视块模式\n2. j 选择多行\n3. I 进入插入模式\n4. 输入 \"# \"\n5. Esc 应用到所有选中行\n```\n\n**VIM配置文件示例（~/.vimrc）：**\n```bash\n# 基础配置\nset number               # 显示行号\nset tabstop=4           # Tab宽度\nset shiftwidth=4        # 缩进宽度\nset expandtab           # Tab转空格\nset hlsearch            # 高亮搜索\nset incsearch           # 增量搜索\nset ignorecase          # 忽略大小写\nset smartcase           # 智能大小写\nset autoindent          # 自动缩进\nset syntax=on           # 语法高亮\n\n# 快捷键映射\nmap <F2> :w<CR>         # F2保存\nmap <F3> :q<CR>         # F3退出\n```\n\n**生产环境应用：**\n• 服务器配置文件编辑\n• 日志文件分析和处理\n• 脚本开发和调试\n• 代码审查和修改\n• 批量文本处理任务", "exercises": ["**理论练习：** 请用自己的话总结本节的核心概念，并说明在实际工作中的应用价值。", "**实践练习：** 根据提供的代码示例，完成一个相关的小项目或任务。", "**扩展练习：** 查阅相关资料，了解本知识点的高级用法或最佳实践。"], "images": ["https://images.unsplash.com/photo-1519389950473-47ba0277781c", "https://images.unsplash.com/photo-1508780709619-79562169bc64"]}');
INSERT INTO contents (id, topic_id, data) VALUES (65, 65, '{"title": "vi编辑器基础操作与实用技巧", "theory": "vi是Unix/Linux系统中最原始和基础的文本编辑器，是VIM的前身。vi编辑器在所有Unix/Linux系统中都默认安装，是系统管理员必须掌握的基本工具。\n\n**vi的特点：**\n• 轻量级，占用资源少\n• 在所有Unix/Linux系统中都可用\n• 纯键盘操作，适合远程管理\n• 启动速度快\n• 功能相对简单但足够实用\n\n**vi的两种模式：**\n• 命令模式（Command Mode）：默认模式，用于导航和执行命令\n• 插入模式（Insert Mode）：用于输入和编辑文本\n\n**与VIM的区别：**\n• vi功能较少，VIM功能更丰富\n• vi语法高亮支持有限\n• vi插件系统不如VIM完善\n• vi在某些系统中实际是VIM的别名\n\n**使用场景：**\n• 系统救援模式下的文件编辑\n• 资源受限的嵌入式系统\n• 快速编辑小文件\n• 远程服务器管理", "code": "# vi基础操作\n\n# 启动vi\nvi filename.txt          # 打开文件\nvi +10 file.txt         # 打开文件并跳到第10行\nvi +/pattern file.txt   # 打开文件并搜索pattern\n\n# 模式切换\ni                        # 进入插入模式（光标前）\na                        # 进入插入模式（光标后）\nA                        # 进入插入模式（行尾）\no                        # 新建行并进入插入模式\nO                        # 在上方新建行并进入插入模式\nEsc                      # 返回命令模式\n\n# 光标移动（命令模式）\nh                        # 左移一个字符\nj                        # 下移一行\nk                        # 上移一行\nl                        # 右移一个字符\nw                        # 移到下一个单词开头\nb                        # 移到上一个单词开头\n0                        # 移到行首\n$                        # 移到行尾\nG                        # 移到文件末尾\n1G 或 gg                 # 移到文件开头\n10G                      # 移到第10行\n\n# 文本编辑（命令模式）\nx                        # 删除当前字符\nX                        # 删除前一个字符\ndw                       # 删除单词\ndd                       # 删除整行\n3dd                      # 删除3行\nyy                       # 复制当前行\n3yy                      # 复制3行\np                        # 在光标后粘贴\nP                        # 在光标前粘贴\nu                        # 撤销上一个操作\n\n# 搜索和替换\n/pattern                 # 向下搜索\n?pattern                 # 向上搜索\nn                        # 下一个匹配\nN                        # 上一个匹配\n:s/old/new/              # 替换当前行第一个\n:s/old/new/g             # 替换当前行所有\n:%s/old/new/g            # 替换全文所有\n\n# 文件操作\n:w                       # 保存文件\n:w filename              # 另存为\n:q                       # 退出\n:q!                      # 强制退出不保存\n:wq                      # 保存并退出\n:x                       # 保存并退出（同:wq）\nZZ                       # 保存并退出（快捷键）", "case": "**案例：使用vi进行系统配置文件快速编辑**\n\n场景：在服务器维护时使用vi编辑关键配置文件\n\n```bash\n# 1. 编辑SSH配置文件\nsudo vi /etc/ssh/sshd_config\n\n# vi操作步骤：\n# - 按 /Port 搜索端口配置\n# - 按 n 找到下一个匹配\n# - 按 A 移到行尾并进入插入模式\n# - 修改端口号\n# - 按 Esc 返回命令模式\n# - 输入 :wq 保存并退出\n\n# 2. 编辑网络配置（CentOS）\nsudo vi /etc/sysconfig/network-scripts/ifcfg-eth0\n\n# 快速编辑技巧：\n# - 使用 dd 删除整行\n# - 使用 o 在下方新建行\n# - 使用 yy 和 p 复制粘贴行\n```\n\n**vi实用技巧：**\n\n1. **快速导航：**\n```bash\n# 跳转到特定行\n:50                      # 跳转到第50行\n50G                      # 同上\n\n# 快速移动\nCtrl+f                   # 向下翻页\nCtrl+b                   # 向上翻页\nCtrl+d                   # 向下半页\nCtrl+u                   # 向上半页\n```\n\n2. **批量操作：**\n```bash\n# 删除多行\n5dd                      # 删除5行\nd5d                      # 同上\n\n# 复制多行\n3yy                      # 复制3行\ny3y                      # 同上\n```\n\n3. **搜索技巧：**\n```bash\n# 搜索并替换\n:%s/192.168.1/10.0.0/g   # 替换IP地址\n:1,10s/old/new/g         # 只在1-10行替换\n```\n\n4. **紧急情况处理：**\n```bash\n# 如果vi异常退出，可能产生交换文件\n# 恢复文件：\nvi -r filename.txt\n\n# 删除交换文件：\nrm .filename.txt.swp\n```\n\n**系统管理中的vi应用：**\n\n1. **日志文件查看：**\n```bash\n# 查看系统日志\nsudo vi /var/log/messages\n\n# 快速定位到文件末尾\nG\n\n# 搜索错误信息\n/error\n```\n\n2. **配置文件备份和编辑：**\n```bash\n# 备份配置文件\ncp /etc/httpd/conf/httpd.conf /etc/httpd/conf/httpd.conf.bak\n\n# 编辑配置\nvi /etc/httpd/conf/httpd.conf\n```\n\n**vi与其他编辑器的选择：**\n• 紧急情况：优先使用vi（最基础，一定存在）\n• 日常开发：可选择VIM（功能更强大）\n• 简单编辑：可选择nano（更易上手）\n• 图形界面：可选择gedit、kate等", "exercises": ["**理论练习：** 请用自己的话总结本节的核心概念，并说明在实际工作中的应用价值。", "**实践练习：** 根据提供的代码示例，完成一个相关的小项目或任务。", "**扩展练习：** 查阅相关资料，了解本知识点的高级用法或最佳实践。"], "images": ["https://images.unsplash.com/photo-1519389950473-47ba0277781c", "https://images.unsplash.com/photo-1518779578993-ec3579fee39f"]}');
INSERT INTO contents (id, topic_id, data) VALUES (66, 66, '{"title": "Nano编辑器入门与高效使用", "theory": "Nano是一个简单易用的命令行文本编辑器，特别适合Linux初学者。它提供了直观的界面和简单的操作方式，是vi/vim的友好替代品。\n\n**Nano的特点：**\n• 用户友好，易于学习\n• 底部显示常用快捷键提示\n• 支持语法高亮\n• 支持多文件编辑\n• 占用资源少，启动快速\n• 支持鼠标操作（在支持的终端中）\n\n**Nano的优势：**\n• 学习曲线平缓，新手友好\n• 快捷键直观易记\n• 无需模式切换\n• 实时显示帮助信息\n• 支持搜索和替换\n• 支持拼写检查\n\n**适用场景：**\n• Linux初学者的首选编辑器\n• 快速编辑配置文件\n• 编写简单脚本\n• 查看和修改文本文件\n• 系统管理任务\n\n**与其他编辑器对比：**\n• 比vi/vim更容易上手\n• 比图形编辑器更轻量\n• 功能比vi丰富，比vim简单\n• 适合不需要复杂编辑功能的场景", "code": "# Nano基础操作\n\n# 启动nano\nnano filename.txt        # 打开文件\nnano +10 file.txt       # 打开文件并跳到第10行\nnano -w file.txt        # 禁用自动换行\nnano -T 4 file.txt      # 设置Tab宽度为4\n\n# 基本编辑操作（直接输入即可编辑）\n# 光标移动\nCtrl + A                 # 移到行首\nCtrl + E                 # 移到行尾\nCtrl + Y                 # 上一页\nCtrl + V                 # 下一页\nAlt + A                  # 选择文本（开始标记）\n\n# 文件操作\nCtrl + O                 # 保存文件（WriteOut）\nCtrl + X                 # 退出nano\nCtrl + R                 # 读取文件（插入另一个文件内容）\n\n# 编辑操作\nCtrl + K                 # 剪切当前行\nCtrl + U                 # 粘贴\nCtrl + 6                 # 开始选择文本\nAlt + 6                  # 复制选中文本\nCtrl + T                 # 拼写检查\n\n# 搜索和替换\nCtrl + W                 # 搜索\nCtrl + \\                 # 搜索并替换\nAlt + W                  # 重复上次搜索\nAlt + R                  # 替换\n\n# 导航操作\nCtrl + G                 # 显示帮助\nCtrl + C                 # 显示光标位置\nCtrl + _                 # 跳转到指定行号\nAlt + G                  # 跳转到指定行号\n\n# 其他有用操作\nCtrl + J                 # 对齐段落\nCtrl + L                 # 刷新屏幕\nAlt + U                  # 撤销\nAlt + E                  # 重做\nAlt + 3                  # 注释/取消注释\nAlt + }                  # 缩进\nAlt + {                  # 取消缩进", "case": "**案例：使用Nano进行日常系统管理**\n\n场景1：编辑系统配置文件\n\n```bash\n# 1. 编辑主机名\nsudo nano /etc/hostname\n\n# 操作步骤：\n# - 直接输入新的主机名\n# - 按 Ctrl+O 保存\n# - 按 Enter 确认文件名\n# - 按 Ctrl+X 退出\n\n# 2. 编辑hosts文件\nsudo nano /etc/hosts\n\n# 添加新的主机映射：\n# - 移动到文件末尾\n# - 输入：192.168.1.100 myserver.local\n# - 保存并退出\n```\n\n场景2：创建和编辑脚本文件\n\n```bash\n# 创建备份脚本\nnano backup_script.sh\n\n# 输入脚本内容：\n#!/bin/bash\n# 系统备份脚本\necho \"开始备份...\"\ntar -czf /backup/system_$(date +%Y%m%d).tar.gz /etc /home\necho \"备份完成\"\n\n# 保存并设置执行权限\nchmod +x backup_script.sh\n```\n\n**Nano高级技巧：**\n\n1. **多文件编辑：**\n```bash\n# 同时打开多个文件\nnano file1.txt file2.txt file3.txt\n\n# 在nano中切换文件\nAlt + <                  # 上一个文件\nAlt + >                  # 下一个文件\n```\n\n2. **搜索和替换技巧：**\n```bash\n# 在nano中进行搜索替换\n# 1. 按 Ctrl+\\ 进入替换模式\n# 2. 输入要搜索的文本\n# 3. 按 Enter\n# 4. 输入替换文本\n# 5. 按 Enter\n# 6. 选择替换选项：\n#    - Y: 替换当前匹配\n#    - N: 跳过当前匹配\n#    - A: 替换所有匹配\n```\n\n3. **配置nano：**\n```bash\n# 创建nano配置文件\nnano ~/.nanorc\n\n# 添加配置选项：\nset tabsize 4            # 设置Tab大小\nset autoindent           # 自动缩进\nset linenumbers          # 显示行号\nset mouse                # 启用鼠标支持\nset smooth               # 平滑滚动\nset softwrap             # 软换行\ninclude \"/usr/share/nano/*.nanorc\"  # 启用语法高亮\n```\n\n4. **语法高亮：**\n```bash\n# nano支持多种文件类型的语法高亮\n# 编辑不同类型的文件：\nnano script.py           # Python语法高亮\nnano config.json         # JSON语法高亮\nnano style.css           # CSS语法高亮\nnano index.html          # HTML语法高亮\n```\n\n**实用场景应用：**\n\n1. **快速编辑配置文件：**\n```bash\n# 编辑SSH配置\nsudo nano /etc/ssh/sshd_config\n\n# 编辑防火墙规则\nsudo nano /etc/iptables/rules.v4\n\n# 编辑定时任务\ncrontab -e  # 如果设置nano为默认编辑器\n```\n\n2. **日志文件查看和编辑：**\n```bash\n# 查看系统日志\nsudo nano /var/log/syslog\n\n# 使用 Ctrl+W 搜索特定错误\n# 使用 Ctrl+C 查看当前位置\n```\n\n3. **创建文档和说明文件：**\n```bash\n# 创建README文件\nnano README.md\n\n# 创建安装说明\nnano INSTALL.txt\n```\n\n**Nano vs 其他编辑器的选择建议：**\n\n• **选择nano的情况：**\n  - Linux新手\n  - 需要快速编辑文件\n  - 不需要复杂的编辑功能\n  - 偶尔使用命令行编辑器\n\n• **选择vi/vim的情况：**\n  - 需要高效的编辑操作\n  - 经常进行代码编辑\n  - 需要强大的搜索替换功能\n  - 系统资源极其有限\n\n• **nano的学习路径：**\n  1. 掌握基本的打开、编辑、保存、退出\n  2. 学习搜索和替换功能\n  3. 了解配置选项和语法高亮\n  4. 根据需要决定是否学习更高级的编辑器", "exercises": ["**理论练习：** 请用自己的话总结本节的核心概念，并说明在实际工作中的应用价值。", "**实践练习：** 根据提供的代码示例，完成一个相关的小项目或任务。", "**扩展练习：** 查阅相关资料，了解本知识点的高级用法或最佳实践。"], "images": ["https://images.unsplash.com/photo-1519389950473-47ba0277781c", "https://images.unsplash.com/photo-1508780709619-79562169bc64"]}');
INSERT INTO contents (id, topic_id, data) VALUES (67, 67, '{"title": "vi编辑器基础操作与实用技巧", "theory": "vi是Unix/Linux系统中最原始和基础的文本编辑器，是VIM的前身。vi编辑器在所有Unix/Linux系统中都默认安装，是系统管理员必须掌握的基本工具。\n\n**vi的特点：**\n• 轻量级，占用资源少\n• 在所有Unix/Linux系统中都可用\n• 纯键盘操作，适合远程管理\n• 启动速度快\n• 功能相对简单但足够实用\n\n**vi的两种模式：**\n• 命令模式（Command Mode）：默认模式，用于导航和执行命令\n• 插入模式（Insert Mode）：用于输入和编辑文本\n\n**与VIM的区别：**\n• vi功能较少，VIM功能更丰富\n• vi语法高亮支持有限\n• vi插件系统不如VIM完善\n• vi在某些系统中实际是VIM的别名\n\n**使用场景：**\n• 系统救援模式下的文件编辑\n• 资源受限的嵌入式系统\n• 快速编辑小文件\n• 远程服务器管理", "code": "# vi基础操作\n\n# 启动vi\nvi filename.txt          # 打开文件\nvi +10 file.txt         # 打开文件并跳到第10行\nvi +/pattern file.txt   # 打开文件并搜索pattern\n\n# 模式切换\ni                        # 进入插入模式（光标前）\na                        # 进入插入模式（光标后）\nA                        # 进入插入模式（行尾）\no                        # 新建行并进入插入模式\nO                        # 在上方新建行并进入插入模式\nEsc                      # 返回命令模式\n\n# 光标移动（命令模式）\nh                        # 左移一个字符\nj                        # 下移一行\nk                        # 上移一行\nl                        # 右移一个字符\nw                        # 移到下一个单词开头\nb                        # 移到上一个单词开头\n0                        # 移到行首\n$                        # 移到行尾\nG                        # 移到文件末尾\n1G 或 gg                 # 移到文件开头\n10G                      # 移到第10行\n\n# 文本编辑（命令模式）\nx                        # 删除当前字符\nX                        # 删除前一个字符\ndw                       # 删除单词\ndd                       # 删除整行\n3dd                      # 删除3行\nyy                       # 复制当前行\n3yy                      # 复制3行\np                        # 在光标后粘贴\nP                        # 在光标前粘贴\nu                        # 撤销上一个操作\n\n# 搜索和替换\n/pattern                 # 向下搜索\n?pattern                 # 向上搜索\nn                        # 下一个匹配\nN                        # 上一个匹配\n:s/old/new/              # 替换当前行第一个\n:s/old/new/g             # 替换当前行所有\n:%s/old/new/g            # 替换全文所有\n\n# 文件操作\n:w                       # 保存文件\n:w filename              # 另存为\n:q                       # 退出\n:q!                      # 强制退出不保存\n:wq                      # 保存并退出\n:x                       # 保存并退出（同:wq）\nZZ                       # 保存并退出（快捷键）", "case": "**案例：使用vi进行系统配置文件快速编辑**\n\n场景：在服务器维护时使用vi编辑关键配置文件\n\n```bash\n# 1. 编辑SSH配置文件\nsudo vi /etc/ssh/sshd_config\n\n# vi操作步骤：\n# - 按 /Port 搜索端口配置\n# - 按 n 找到下一个匹配\n# - 按 A 移到行尾并进入插入模式\n# - 修改端口号\n# - 按 Esc 返回命令模式\n# - 输入 :wq 保存并退出\n\n# 2. 编辑网络配置（CentOS）\nsudo vi /etc/sysconfig/network-scripts/ifcfg-eth0\n\n# 快速编辑技巧：\n# - 使用 dd 删除整行\n# - 使用 o 在下方新建行\n# - 使用 yy 和 p 复制粘贴行\n```\n\n**vi实用技巧：**\n\n1. **快速导航：**\n```bash\n# 跳转到特定行\n:50                      # 跳转到第50行\n50G                      # 同上\n\n# 快速移动\nCtrl+f                   # 向下翻页\nCtrl+b                   # 向上翻页\nCtrl+d                   # 向下半页\nCtrl+u                   # 向上半页\n```\n\n2. **批量操作：**\n```bash\n# 删除多行\n5dd                      # 删除5行\nd5d                      # 同上\n\n# 复制多行\n3yy                      # 复制3行\ny3y                      # 同上\n```\n\n3. **搜索技巧：**\n```bash\n# 搜索并替换\n:%s/192.168.1/10.0.0/g   # 替换IP地址\n:1,10s/old/new/g         # 只在1-10行替换\n```\n\n4. **紧急情况处理：**\n```bash\n# 如果vi异常退出，可能产生交换文件\n# 恢复文件：\nvi -r filename.txt\n\n# 删除交换文件：\nrm .filename.txt.swp\n```\n\n**系统管理中的vi应用：**\n\n1. **日志文件查看：**\n```bash\n# 查看系统日志\nsudo vi /var/log/messages\n\n# 快速定位到文件末尾\nG\n\n# 搜索错误信息\n/error\n```\n\n2. **配置文件备份和编辑：**\n```bash\n# 备份配置文件\ncp /etc/httpd/conf/httpd.conf /etc/httpd/conf/httpd.conf.bak\n\n# 编辑配置\nvi /etc/httpd/conf/httpd.conf\n```\n\n**vi与其他编辑器的选择：**\n• 紧急情况：优先使用vi（最基础，一定存在）\n• 日常开发：可选择VIM（功能更强大）\n• 简单编辑：可选择nano（更易上手）\n• 图形界面：可选择gedit、kate等", "exercises": ["**理论练习：** 请用自己的话总结本节的核心概念，并说明在实际工作中的应用价值。", "**实践练习：** 根据提供的代码示例，完成一个相关的小项目或任务。", "**扩展练习：** 查阅相关资料，了解本知识点的高级用法或最佳实践。"], "images": ["https://images.unsplash.com/photo-1519389950473-47ba0277781c", "https://images.unsplash.com/photo-1518779578993-ec3579fee39f"]}');
INSERT INTO contents (id, topic_id, data) VALUES (68, 68, '{"title": "Nano编辑器入门与高效使用", "theory": "Nano是一个简单易用的命令行文本编辑器，特别适合Linux初学者。它提供了直观的界面和简单的操作方式，是vi/vim的友好替代品。\n\n**Nano的特点：**\n• 用户友好，易于学习\n• 底部显示常用快捷键提示\n• 支持语法高亮\n• 支持多文件编辑\n• 占用资源少，启动快速\n• 支持鼠标操作（在支持的终端中）\n\n**Nano的优势：**\n• 学习曲线平缓，新手友好\n• 快捷键直观易记\n• 无需模式切换\n• 实时显示帮助信息\n• 支持搜索和替换\n• 支持拼写检查\n\n**适用场景：**\n• Linux初学者的首选编辑器\n• 快速编辑配置文件\n• 编写简单脚本\n• 查看和修改文本文件\n• 系统管理任务\n\n**与其他编辑器对比：**\n• 比vi/vim更容易上手\n• 比图形编辑器更轻量\n• 功能比vi丰富，比vim简单\n• 适合不需要复杂编辑功能的场景", "code": "# Nano基础操作\n\n# 启动nano\nnano filename.txt        # 打开文件\nnano +10 file.txt       # 打开文件并跳到第10行\nnano -w file.txt        # 禁用自动换行\nnano -T 4 file.txt      # 设置Tab宽度为4\n\n# 基本编辑操作（直接输入即可编辑）\n# 光标移动\nCtrl + A                 # 移到行首\nCtrl + E                 # 移到行尾\nCtrl + Y                 # 上一页\nCtrl + V                 # 下一页\nAlt + A                  # 选择文本（开始标记）\n\n# 文件操作\nCtrl + O                 # 保存文件（WriteOut）\nCtrl + X                 # 退出nano\nCtrl + R                 # 读取文件（插入另一个文件内容）\n\n# 编辑操作\nCtrl + K                 # 剪切当前行\nCtrl + U                 # 粘贴\nCtrl + 6                 # 开始选择文本\nAlt + 6                  # 复制选中文本\nCtrl + T                 # 拼写检查\n\n# 搜索和替换\nCtrl + W                 # 搜索\nCtrl + \\                 # 搜索并替换\nAlt + W                  # 重复上次搜索\nAlt + R                  # 替换\n\n# 导航操作\nCtrl + G                 # 显示帮助\nCtrl + C                 # 显示光标位置\nCtrl + _                 # 跳转到指定行号\nAlt + G                  # 跳转到指定行号\n\n# 其他有用操作\nCtrl + J                 # 对齐段落\nCtrl + L                 # 刷新屏幕\nAlt + U                  # 撤销\nAlt + E                  # 重做\nAlt + 3                  # 注释/取消注释\nAlt + }                  # 缩进\nAlt + {                  # 取消缩进", "case": "**案例：使用Nano进行日常系统管理**\n\n场景1：编辑系统配置文件\n\n```bash\n# 1. 编辑主机名\nsudo nano /etc/hostname\n\n# 操作步骤：\n# - 直接输入新的主机名\n# - 按 Ctrl+O 保存\n# - 按 Enter 确认文件名\n# - 按 Ctrl+X 退出\n\n# 2. 编辑hosts文件\nsudo nano /etc/hosts\n\n# 添加新的主机映射：\n# - 移动到文件末尾\n# - 输入：192.168.1.100 myserver.local\n# - 保存并退出\n```\n\n场景2：创建和编辑脚本文件\n\n```bash\n# 创建备份脚本\nnano backup_script.sh\n\n# 输入脚本内容：\n#!/bin/bash\n# 系统备份脚本\necho \"开始备份...\"\ntar -czf /backup/system_$(date +%Y%m%d).tar.gz /etc /home\necho \"备份完成\"\n\n# 保存并设置执行权限\nchmod +x backup_script.sh\n```\n\n**Nano高级技巧：**\n\n1. **多文件编辑：**\n```bash\n# 同时打开多个文件\nnano file1.txt file2.txt file3.txt\n\n# 在nano中切换文件\nAlt + <                  # 上一个文件\nAlt + >                  # 下一个文件\n```\n\n2. **搜索和替换技巧：**\n```bash\n# 在nano中进行搜索替换\n# 1. 按 Ctrl+\\ 进入替换模式\n# 2. 输入要搜索的文本\n# 3. 按 Enter\n# 4. 输入替换文本\n# 5. 按 Enter\n# 6. 选择替换选项：\n#    - Y: 替换当前匹配\n#    - N: 跳过当前匹配\n#    - A: 替换所有匹配\n```\n\n3. **配置nano：**\n```bash\n# 创建nano配置文件\nnano ~/.nanorc\n\n# 添加配置选项：\nset tabsize 4            # 设置Tab大小\nset autoindent           # 自动缩进\nset linenumbers          # 显示行号\nset mouse                # 启用鼠标支持\nset smooth               # 平滑滚动\nset softwrap             # 软换行\ninclude \"/usr/share/nano/*.nanorc\"  # 启用语法高亮\n```\n\n4. **语法高亮：**\n```bash\n# nano支持多种文件类型的语法高亮\n# 编辑不同类型的文件：\nnano script.py           # Python语法高亮\nnano config.json         # JSON语法高亮\nnano style.css           # CSS语法高亮\nnano index.html          # HTML语法高亮\n```\n\n**实用场景应用：**\n\n1. **快速编辑配置文件：**\n```bash\n# 编辑SSH配置\nsudo nano /etc/ssh/sshd_config\n\n# 编辑防火墙规则\nsudo nano /etc/iptables/rules.v4\n\n# 编辑定时任务\ncrontab -e  # 如果设置nano为默认编辑器\n```\n\n2. **日志文件查看和编辑：**\n```bash\n# 查看系统日志\nsudo nano /var/log/syslog\n\n# 使用 Ctrl+W 搜索特定错误\n# 使用 Ctrl+C 查看当前位置\n```\n\n3. **创建文档和说明文件：**\n```bash\n# 创建README文件\nnano README.md\n\n# 创建安装说明\nnano INSTALL.txt\n```\n\n**Nano vs 其他编辑器的选择建议：**\n\n• **选择nano的情况：**\n  - Linux新手\n  - 需要快速编辑文件\n  - 不需要复杂的编辑功能\n  - 偶尔使用命令行编辑器\n\n• **选择vi/vim的情况：**\n  - 需要高效的编辑操作\n  - 经常进行代码编辑\n  - 需要强大的搜索替换功能\n  - 系统资源极其有限\n\n• **nano的学习路径：**\n  1. 掌握基本的打开、编辑、保存、退出\n  2. 学习搜索和替换功能\n  3. 了解配置选项和语法高亮\n  4. 根据需要决定是否学习更高级的编辑器", "exercises": ["**理论练习：** 请用自己的话总结本节的核心概念，并说明在实际工作中的应用价值。", "**实践练习：** 根据提供的代码示例，完成一个相关的小项目或任务。", "**扩展练习：** 查阅相关资料，了解本知识点的高级用法或最佳实践。"], "images": ["https://images.unsplash.com/photo-1519389950473-47ba0277781c", "https://images.unsplash.com/photo-1518779578993-ec3579fee39f"]}');

-- 表数据: exam_sets
-- 导出时间: 2025-08-25 20:20:11
-- 记录数: 6

DELETE FROM exam_sets;

INSERT INTO exam_sets (id, name) VALUES (1, '模拟考试第1套');
INSERT INTO exam_sets (id, name) VALUES (2, '模拟考试第2套');
INSERT INTO exam_sets (id, name) VALUES (3, '模拟考试第3套');
INSERT INTO exam_sets (id, name) VALUES (4, '模拟考试第4套');
INSERT INTO exam_sets (id, name) VALUES (5, '模拟考试第5套');
INSERT INTO exam_sets (id, name) VALUES (6, 'Hadoop核心组件专项练习');

-- 表数据: questions
-- 导出时间: 2025-08-25 20:20:11
-- 记录数: 168

DELETE FROM questions;

INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (1, 1, 'mcq', '[选择题] 第1套 第1题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 1, '1:1');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (2, 1, 'mcq', '[选择题] 第1套 第2题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 2, '2:2');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (3, 1, 'mcq', '[选择题] 第1套 第3题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 3, '3:3');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (4, 1, 'mcq', '[选择题] 第1套 第4题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 4, '4:4');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (5, 1, 'mcq', '[选择题] 第1套 第5题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 5, '5:5');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (6, 1, 'mcq', '[选择题] 第1套 第6题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 6, '1:1');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (7, 1, 'mcq', '[选择题] 第1套 第7题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 7, '2:2');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (8, 1, 'mcq', '[选择题] 第1套 第8题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 8, '3:3');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (9, 1, 'mcq', '[选择题] 第1套 第9题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 9, '4:4');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (10, 1, 'mcq', '[选择题] 第1套 第10题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 10, '5:5');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (11, 1, 'mcq', '[选择题] 第1套 第11题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 11, '1:1');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (12, 1, 'mcq', '[选择题] 第1套 第12题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 12, '2:2');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (13, 1, 'tf', '[判断题] 第1套 第1题：/root为普通用户家目录。', NULL, 'False', 2, 13, '3:3');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (14, 1, 'tf', '[判断题] 第1套 第2题：/root为普通用户家目录。', NULL, 'False', 2, 14, '4:4');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (15, 1, 'tf', '[判断题] 第1套 第3题：/root为普通用户家目录。', NULL, 'False', 2, 15, '5:5');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (16, 1, 'tf', '[判断题] 第1套 第4题：/root为普通用户家目录。', NULL, 'False', 2, 16, '1:1');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (17, 1, 'tf', '[判断题] 第1套 第5题：/root为普通用户家目录。', NULL, 'False', 2, 17, '2:2');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (18, 1, 'tf', '[判断题] 第1套 第6题：/root为普通用户家目录。', NULL, 'False', 2, 18, '3:3');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (19, 1, 'tf', '[判断题] 第1套 第7题：/root为普通用户家目录。', NULL, 'False', 2, 19, '4:4');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (20, 1, 'tf', '[判断题] 第1套 第8题：/root为普通用户家目录。', NULL, 'False', 2, 20, '5:5');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (21, 1, 'fill', '[填空题] 第1套 第1题：查看当前路径的命令是____。', NULL, 'pwd', 2, 21, '1:1');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (22, 1, 'fill', '[填空题] 第1套 第2题：查看当前路径的命令是____。', NULL, 'pwd', 2, 22, '2:2');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (23, 1, 'fill', '[填空题] 第1套 第3题：查看当前路径的命令是____。', NULL, 'pwd', 2, 23, '3:3');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (24, 1, 'fill', '[填空题] 第1套 第4题：查看当前路径的命令是____。', NULL, 'pwd', 2, 24, '4:4');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (25, 1, 'fill', '[填空题] 第1套 第5题：查看当前路径的命令是____。', NULL, 'pwd', 2, 25, '5:5');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (26, 1, 'fill', '[填空题] 第1套 第6题：查看当前路径的命令是____。', NULL, 'pwd', 2, 26, '1:1');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (27, 1, 'short', '[简答题] 第1套 第1题：简述使用Docker部署Hadoop伪分布式的大致步骤。', NULL, '{"keywords": ["拉取镜像", "配置core-site", "启动容器", "HDFS格式化", "NameNode/DataNode"]}', 4, 27, '2:2');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (28, 1, 'short', '[简答题] 第1套 第2题：简述使用Docker部署Hadoop伪分布式的大致步骤。', NULL, '{"keywords": ["拉取镜像", "配置core-site", "启动容器", "HDFS格式化", "NameNode/DataNode"]}', 4, 28, '3:3');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (29, 1, 'short', '[简答题] 第1套 第3题：简述使用Docker部署Hadoop伪分布式的大致步骤。', NULL, '{"keywords": ["拉取镜像", "配置core-site", "启动容器", "HDFS格式化", "NameNode/DataNode"]}', 4, 29, '4:4');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (30, 1, 'short', '[简答题] 第1套 第4题：简述使用Docker部署Hadoop伪分布式的大致步骤。', NULL, '{"keywords": ["拉取镜像", "配置core-site", "启动容器", "HDFS格式化", "NameNode/DataNode"]}', 4, 30, '5:5');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (31, 2, 'mcq', '[选择题] 第2套 第1题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 1, '1:1');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (32, 2, 'mcq', '[选择题] 第2套 第2题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 2, '2:2');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (33, 2, 'mcq', '[选择题] 第2套 第3题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 3, '3:3');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (34, 2, 'mcq', '[选择题] 第2套 第4题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 4, '4:4');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (35, 2, 'mcq', '[选择题] 第2套 第5题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 5, '5:5');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (36, 2, 'mcq', '[选择题] 第2套 第6题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 6, '1:1');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (37, 2, 'mcq', '[选择题] 第2套 第7题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 7, '2:2');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (38, 2, 'mcq', '[选择题] 第2套 第8题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 8, '3:3');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (39, 2, 'mcq', '[选择题] 第2套 第9题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 9, '4:4');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (40, 2, 'mcq', '[选择题] 第2套 第10题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 10, '5:5');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (41, 2, 'mcq', '[选择题] 第2套 第11题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 11, '1:1');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (42, 2, 'mcq', '[选择题] 第2套 第12题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 12, '2:2');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (43, 2, 'tf', '[判断题] 第2套 第1题：/root为普通用户家目录。', NULL, 'False', 2, 13, '3:3');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (44, 2, 'tf', '[判断题] 第2套 第2题：/root为普通用户家目录。', NULL, 'False', 2, 14, '4:4');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (45, 2, 'tf', '[判断题] 第2套 第3题：/root为普通用户家目录。', NULL, 'False', 2, 15, '5:5');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (46, 2, 'tf', '[判断题] 第2套 第4题：/root为普通用户家目录。', NULL, 'False', 2, 16, '1:1');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (47, 2, 'tf', '[判断题] 第2套 第5题：/root为普通用户家目录。', NULL, 'False', 2, 17, '2:2');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (48, 2, 'tf', '[判断题] 第2套 第6题：/root为普通用户家目录。', NULL, 'False', 2, 18, '3:3');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (49, 2, 'tf', '[判断题] 第2套 第7题：/root为普通用户家目录。', NULL, 'False', 2, 19, '4:4');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (50, 2, 'tf', '[判断题] 第2套 第8题：/root为普通用户家目录。', NULL, 'False', 2, 20, '5:5');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (51, 2, 'fill', '[填空题] 第2套 第1题：查看当前路径的命令是____。', NULL, 'pwd', 2, 21, '1:1');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (52, 2, 'fill', '[填空题] 第2套 第2题：查看当前路径的命令是____。', NULL, 'pwd', 2, 22, '2:2');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (53, 2, 'fill', '[填空题] 第2套 第3题：查看当前路径的命令是____。', NULL, 'pwd', 2, 23, '3:3');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (54, 2, 'fill', '[填空题] 第2套 第4题：查看当前路径的命令是____。', NULL, 'pwd', 2, 24, '4:4');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (55, 2, 'fill', '[填空题] 第2套 第5题：查看当前路径的命令是____。', NULL, 'pwd', 2, 25, '5:5');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (56, 2, 'fill', '[填空题] 第2套 第6题：查看当前路径的命令是____。', NULL, 'pwd', 2, 26, '1:1');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (57, 2, 'short', '[简答题] 第2套 第1题：简述使用Docker部署Hadoop伪分布式的大致步骤。', NULL, '{"keywords": ["拉取镜像", "配置core-site", "启动容器", "HDFS格式化", "NameNode/DataNode"]}', 4, 27, '2:2');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (58, 2, 'short', '[简答题] 第2套 第2题：简述使用Docker部署Hadoop伪分布式的大致步骤。', NULL, '{"keywords": ["拉取镜像", "配置core-site", "启动容器", "HDFS格式化", "NameNode/DataNode"]}', 4, 28, '3:3');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (59, 2, 'short', '[简答题] 第2套 第3题：简述使用Docker部署Hadoop伪分布式的大致步骤。', NULL, '{"keywords": ["拉取镜像", "配置core-site", "启动容器", "HDFS格式化", "NameNode/DataNode"]}', 4, 29, '4:4');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (60, 2, 'short', '[简答题] 第2套 第4题：简述使用Docker部署Hadoop伪分布式的大致步骤。', NULL, '{"keywords": ["拉取镜像", "配置core-site", "启动容器", "HDFS格式化", "NameNode/DataNode"]}', 4, 30, '5:5');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (61, 3, 'mcq', '[选择题] 第3套 第1题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 1, '1:1');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (62, 3, 'mcq', '[选择题] 第3套 第2题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 2, '2:2');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (63, 3, 'mcq', '[选择题] 第3套 第3题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 3, '3:3');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (64, 3, 'mcq', '[选择题] 第3套 第4题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 4, '4:4');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (65, 3, 'mcq', '[选择题] 第3套 第5题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 5, '5:5');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (66, 3, 'mcq', '[选择题] 第3套 第6题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 6, '1:1');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (67, 3, 'mcq', '[选择题] 第3套 第7题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 7, '2:2');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (68, 3, 'mcq', '[选择题] 第3套 第8题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 8, '3:3');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (69, 3, 'mcq', '[选择题] 第3套 第9题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 9, '4:4');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (70, 3, 'mcq', '[选择题] 第3套 第10题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 10, '5:5');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (71, 3, 'mcq', '[选择题] 第3套 第11题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 11, '1:1');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (72, 3, 'mcq', '[选择题] 第3套 第12题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 12, '2:2');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (73, 3, 'tf', '[判断题] 第3套 第1题：/root为普通用户家目录。', NULL, 'False', 2, 13, '3:3');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (74, 3, 'tf', '[判断题] 第3套 第2题：/root为普通用户家目录。', NULL, 'False', 2, 14, '4:4');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (75, 3, 'tf', '[判断题] 第3套 第3题：/root为普通用户家目录。', NULL, 'False', 2, 15, '5:5');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (76, 3, 'tf', '[判断题] 第3套 第4题：/root为普通用户家目录。', NULL, 'False', 2, 16, '1:1');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (77, 3, 'tf', '[判断题] 第3套 第5题：/root为普通用户家目录。', NULL, 'False', 2, 17, '2:2');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (78, 3, 'tf', '[判断题] 第3套 第6题：/root为普通用户家目录。', NULL, 'False', 2, 18, '3:3');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (79, 3, 'tf', '[判断题] 第3套 第7题：/root为普通用户家目录。', NULL, 'False', 2, 19, '4:4');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (80, 3, 'tf', '[判断题] 第3套 第8题：/root为普通用户家目录。', NULL, 'False', 2, 20, '5:5');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (81, 3, 'fill', '[填空题] 第3套 第1题：查看当前路径的命令是____。', NULL, 'pwd', 2, 21, '1:1');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (82, 3, 'fill', '[填空题] 第3套 第2题：查看当前路径的命令是____。', NULL, 'pwd', 2, 22, '2:2');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (83, 3, 'fill', '[填空题] 第3套 第3题：查看当前路径的命令是____。', NULL, 'pwd', 2, 23, '3:3');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (84, 3, 'fill', '[填空题] 第3套 第4题：查看当前路径的命令是____。', NULL, 'pwd', 2, 24, '4:4');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (85, 3, 'fill', '[填空题] 第3套 第5题：查看当前路径的命令是____。', NULL, 'pwd', 2, 25, '5:5');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (86, 3, 'fill', '[填空题] 第3套 第6题：查看当前路径的命令是____。', NULL, 'pwd', 2, 26, '1:1');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (87, 3, 'short', '[简答题] 第3套 第1题：简述使用Docker部署Hadoop伪分布式的大致步骤。', NULL, '{"keywords": ["拉取镜像", "配置core-site", "启动容器", "HDFS格式化", "NameNode/DataNode"]}', 4, 27, '2:2');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (88, 3, 'short', '[简答题] 第3套 第2题：简述使用Docker部署Hadoop伪分布式的大致步骤。', NULL, '{"keywords": ["拉取镜像", "配置core-site", "启动容器", "HDFS格式化", "NameNode/DataNode"]}', 4, 28, '3:3');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (89, 3, 'short', '[简答题] 第3套 第3题：简述使用Docker部署Hadoop伪分布式的大致步骤。', NULL, '{"keywords": ["拉取镜像", "配置core-site", "启动容器", "HDFS格式化", "NameNode/DataNode"]}', 4, 29, '4:4');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (90, 3, 'short', '[简答题] 第3套 第4题：简述使用Docker部署Hadoop伪分布式的大致步骤。', NULL, '{"keywords": ["拉取镜像", "配置core-site", "启动容器", "HDFS格式化", "NameNode/DataNode"]}', 4, 30, '5:5');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (91, 4, 'mcq', '[选择题] 第4套 第1题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 1, '1:1');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (92, 4, 'mcq', '[选择题] 第4套 第2题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 2, '2:2');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (93, 4, 'mcq', '[选择题] 第4套 第3题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 3, '3:3');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (94, 4, 'mcq', '[选择题] 第4套 第4题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 4, '4:4');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (95, 4, 'mcq', '[选择题] 第4套 第5题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 5, '5:5');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (96, 4, 'mcq', '[选择题] 第4套 第6题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 6, '1:1');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (97, 4, 'mcq', '[选择题] 第4套 第7题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 7, '2:2');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (98, 4, 'mcq', '[选择题] 第4套 第8题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 8, '3:3');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (99, 4, 'mcq', '[选择题] 第4套 第9题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 9, '4:4');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (100, 4, 'mcq', '[选择题] 第4套 第10题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 10, '5:5');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (101, 4, 'mcq', '[选择题] 第4套 第11题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 11, '1:1');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (102, 4, 'mcq', '[选择题] 第4套 第12题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 12, '2:2');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (103, 4, 'tf', '[判断题] 第4套 第1题：/root为普通用户家目录。', NULL, 'False', 2, 13, '3:3');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (104, 4, 'tf', '[判断题] 第4套 第2题：/root为普通用户家目录。', NULL, 'False', 2, 14, '4:4');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (105, 4, 'tf', '[判断题] 第4套 第3题：/root为普通用户家目录。', NULL, 'False', 2, 15, '5:5');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (106, 4, 'tf', '[判断题] 第4套 第4题：/root为普通用户家目录。', NULL, 'False', 2, 16, '1:1');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (107, 4, 'tf', '[判断题] 第4套 第5题：/root为普通用户家目录。', NULL, 'False', 2, 17, '2:2');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (108, 4, 'tf', '[判断题] 第4套 第6题：/root为普通用户家目录。', NULL, 'False', 2, 18, '3:3');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (109, 4, 'tf', '[判断题] 第4套 第7题：/root为普通用户家目录。', NULL, 'False', 2, 19, '4:4');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (110, 4, 'tf', '[判断题] 第4套 第8题：/root为普通用户家目录。', NULL, 'False', 2, 20, '5:5');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (111, 4, 'fill', '[填空题] 第4套 第1题：查看当前路径的命令是____。', NULL, 'pwd', 2, 21, '1:1');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (112, 4, 'fill', '[填空题] 第4套 第2题：查看当前路径的命令是____。', NULL, 'pwd', 2, 22, '2:2');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (113, 4, 'fill', '[填空题] 第4套 第3题：查看当前路径的命令是____。', NULL, 'pwd', 2, 23, '3:3');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (114, 4, 'fill', '[填空题] 第4套 第4题：查看当前路径的命令是____。', NULL, 'pwd', 2, 24, '4:4');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (115, 4, 'fill', '[填空题] 第4套 第5题：查看当前路径的命令是____。', NULL, 'pwd', 2, 25, '5:5');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (116, 4, 'fill', '[填空题] 第4套 第6题：查看当前路径的命令是____。', NULL, 'pwd', 2, 26, '1:1');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (117, 4, 'short', '[简答题] 第4套 第1题：简述使用Docker部署Hadoop伪分布式的大致步骤。', NULL, '{"keywords": ["拉取镜像", "配置core-site", "启动容器", "HDFS格式化", "NameNode/DataNode"]}', 4, 27, '2:2');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (118, 4, 'short', '[简答题] 第4套 第2题：简述使用Docker部署Hadoop伪分布式的大致步骤。', NULL, '{"keywords": ["拉取镜像", "配置core-site", "启动容器", "HDFS格式化", "NameNode/DataNode"]}', 4, 28, '3:3');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (119, 4, 'short', '[简答题] 第4套 第3题：简述使用Docker部署Hadoop伪分布式的大致步骤。', NULL, '{"keywords": ["拉取镜像", "配置core-site", "启动容器", "HDFS格式化", "NameNode/DataNode"]}', 4, 29, '4:4');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (120, 4, 'short', '[简答题] 第4套 第4题：简述使用Docker部署Hadoop伪分布式的大致步骤。', NULL, '{"keywords": ["拉取镜像", "配置core-site", "启动容器", "HDFS格式化", "NameNode/DataNode"]}', 4, 30, '5:5');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (121, 5, 'mcq', '[选择题] 第5套 第1题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 1, '1:1');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (122, 5, 'mcq', '[选择题] 第5套 第2题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 2, '2:2');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (123, 5, 'mcq', '[选择题] 第5套 第3题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 3, '3:3');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (124, 5, 'mcq', '[选择题] 第5套 第4题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 4, '4:4');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (125, 5, 'mcq', '[选择题] 第5套 第5题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 5, '5:5');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (126, 5, 'mcq', '[选择题] 第5套 第6题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 6, '1:1');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (127, 5, 'mcq', '[选择题] 第5套 第7题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 7, '2:2');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (128, 5, 'mcq', '[选择题] 第5套 第8题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 8, '3:3');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (129, 5, 'mcq', '[选择题] 第5套 第9题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 9, '4:4');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (130, 5, 'mcq', '[选择题] 第5套 第10题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 10, '5:5');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (131, 5, 'mcq', '[选择题] 第5套 第11题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 11, '1:1');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (132, 5, 'mcq', '[选择题] 第5套 第12题：Linux命令ls的作用是？', '["列出目录内容", "删除文件", "显示文件内容", "切换目录"]', 'A', 2, 12, '2:2');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (133, 5, 'tf', '[判断题] 第5套 第1题：/root为普通用户家目录。', NULL, 'False', 2, 13, '3:3');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (134, 5, 'tf', '[判断题] 第5套 第2题：/root为普通用户家目录。', NULL, 'False', 2, 14, '4:4');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (135, 5, 'tf', '[判断题] 第5套 第3题：/root为普通用户家目录。', NULL, 'False', 2, 15, '5:5');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (136, 5, 'tf', '[判断题] 第5套 第4题：/root为普通用户家目录。', NULL, 'False', 2, 16, '1:1');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (137, 5, 'tf', '[判断题] 第5套 第5题：/root为普通用户家目录。', NULL, 'False', 2, 17, '2:2');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (138, 5, 'tf', '[判断题] 第5套 第6题：/root为普通用户家目录。', NULL, 'False', 2, 18, '3:3');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (139, 5, 'tf', '[判断题] 第5套 第7题：/root为普通用户家目录。', NULL, 'False', 2, 19, '4:4');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (140, 5, 'tf', '[判断题] 第5套 第8题：/root为普通用户家目录。', NULL, 'False', 2, 20, '5:5');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (141, 5, 'fill', '[填空题] 第5套 第1题：查看当前路径的命令是____。', NULL, 'pwd', 2, 21, '1:1');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (142, 5, 'fill', '[填空题] 第5套 第2题：查看当前路径的命令是____。', NULL, 'pwd', 2, 22, '2:2');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (143, 5, 'fill', '[填空题] 第5套 第3题：查看当前路径的命令是____。', NULL, 'pwd', 2, 23, '3:3');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (144, 5, 'fill', '[填空题] 第5套 第4题：查看当前路径的命令是____。', NULL, 'pwd', 2, 24, '4:4');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (145, 5, 'fill', '[填空题] 第5套 第5题：查看当前路径的命令是____。', NULL, 'pwd', 2, 25, '5:5');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (146, 5, 'fill', '[填空题] 第5套 第6题：查看当前路径的命令是____。', NULL, 'pwd', 2, 26, '1:1');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (147, 5, 'short', '[简答题] 第5套 第1题：简述使用Docker部署Hadoop伪分布式的大致步骤。', NULL, '{"keywords": ["拉取镜像", "配置core-site", "启动容器", "HDFS格式化", "NameNode/DataNode"]}', 4, 27, '2:2');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (148, 5, 'short', '[简答题] 第5套 第2题：简述使用Docker部署Hadoop伪分布式的大致步骤。', NULL, '{"keywords": ["拉取镜像", "配置core-site", "启动容器", "HDFS格式化", "NameNode/DataNode"]}', 4, 28, '3:3');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (149, 5, 'short', '[简答题] 第5套 第3题：简述使用Docker部署Hadoop伪分布式的大致步骤。', NULL, '{"keywords": ["拉取镜像", "配置core-site", "启动容器", "HDFS格式化", "NameNode/DataNode"]}', 4, 29, '4:4');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (150, 5, 'short', '[简答题] 第5套 第4题：简述使用Docker部署Hadoop伪分布式的大致步骤。', NULL, '{"keywords": ["拉取镜像", "配置core-site", "启动容器", "HDFS格式化", "NameNode/DataNode"]}', 4, 30, '5:5');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (151, 6, 'mcq', 'HDFS中NameNode的主要作用是什么？', '["存储文件数据块", "管理文件系统命名空间和元数据", "执行MapReduce任务", "监控集群状态"]', 'B', 2, 1, '5:1');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (152, 6, 'mcq', 'HDFS默认的数据块大小是多少？', '["64MB", "128MB", "256MB", "512MB"]', 'B', 2, 2, '5:1');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (153, 6, 'tf', 'HDFS支持随机写入操作。', NULL, 'False', 2, 3, '5:1');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (154, 6, 'tf', 'DataNode负责存储实际的文件数据块。', NULL, 'True', 2, 4, '5:1');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (155, 6, 'fill', 'HDFS中负责管理文件系统命名空间的组件是____。', NULL, 'NameNode', 2, 5, '5:1');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (156, 6, 'short', '简述HDFS的读写流程。', NULL, '{"keywords": ["客户端请求", "NameNode返回DataNode列表", "直接与DataNode通信", "数据块复制", "确认写入"]}', 4, 6, '5:1');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (157, 6, 'mcq', 'YARN中ResourceManager的主要职责是什么？', '["执行具体任务", "管理集群资源分配", "存储数据", "监控网络状态"]', 'B', 2, 7, '5:2');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (158, 6, 'mcq', 'ApplicationMaster的作用是什么？', '["管理整个集群", "协调单个应用程序的执行", "存储应用数据", "监控硬件状态"]', 'B', 2, 8, '5:2');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (159, 6, 'tf', 'NodeManager运行在集群的每个工作节点上。', NULL, 'True', 2, 9, '5:2');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (160, 6, 'tf', 'YARN只能运行MapReduce应用程序。', NULL, 'False', 2, 10, '5:2');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (161, 6, 'fill', 'YARN中负责单个应用程序资源协调的组件是____。', NULL, 'ApplicationMaster', 2, 11, '5:2');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (162, 6, 'short', '描述YARN的资源调度流程。', NULL, '{"keywords": ["客户端提交应用", "ResourceManager分配ApplicationMaster", "ApplicationMaster请求资源", "NodeManager启动Container", "任务执行"]}', 4, 12, '5:2');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (163, 6, 'mcq', 'MapReduce中Map阶段的主要作用是什么？', '["汇总结果", "处理和转换输入数据", "存储数据", "监控任务"]', 'B', 2, 13, '5:3');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (164, 6, 'mcq', 'Shuffle阶段发生在哪两个阶段之间？', '["输入和Map", "Map和Reduce", "Reduce和输出", "输入和输出"]', 'B', 2, 14, '5:3');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (165, 6, 'tf', 'MapReduce程序必须同时包含Map和Reduce阶段。', NULL, 'False', 2, 15, '5:3');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (166, 6, 'tf', 'Combiner可以减少网络传输的数据量。', NULL, 'True', 2, 16, '5:3');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (167, 6, 'fill', 'MapReduce中负责汇总Map输出结果的阶段是____。', NULL, 'Reduce', 2, 17, '5:3');
INSERT INTO questions (id, exam_id, qtype, prompt, options, answer, score, ord, knowledge_ref) VALUES (168, 6, 'short', '解释MapReduce的工作原理和优势。', NULL, '{"keywords": ["分而治之", "并行处理", "容错性", "Map映射", "Reduce归约", "可扩展性"]}', 4, 18, '5:3');

-- 表数据: users
-- 导出时间: 2025-08-25 20:20:11
-- 记录数: 33

DELETE FROM users;

INSERT INTO users (id, username, student_id, name, role, password_hash, class_name, phone, email, status, created_at) VALUES (1, 'admin', NULL, '管理员', 'admin', 'scrypt:32768:8:1$KHPsWQfB0pk9cvgL$0d55a67c8e789e29259e728cf5b4b059b41d0c14ba5003ef2ba424280f12be2f7a751cebc4906b8f9dab1e53f9dc4bf68dc40c0bf73933d6513cb0ea77f91606', NULL, NULL, NULL, 'active', NULL);
INSERT INTO users (id, username, student_id, name, role, password_hash, class_name, phone, email, status, created_at) VALUES (2, NULL, '蔡楷涛', '230102311001', 'student', 'scrypt:32768:8:1$FJeiisBn4Fn0xKB1$7e39fc88ccfb16ebb0f2762972e161397ae09d090752e1dc554930efe74a8b02e3f76e949385903eb120668aa24df9cdc3f270fc640885d9236f36149af6ed13', NULL, NULL, NULL, 'active', '2025-08-25 18:42:34');
INSERT INTO users (id, username, student_id, name, role, password_hash, class_name, phone, email, status, created_at) VALUES (3, NULL, '曾文斌', '230102311002', 'student', 'scrypt:32768:8:1$Qa7t8leJ45JaWAYp$da0211c9493abfa1e63e29bc0bb2d9fcf8e55c0c041bd898a9f4c0deed0da2459ac78943302b6552e37d8347050fd689771e0b20166cd0cf5598793e578b78b6', NULL, NULL, NULL, 'active', '2025-08-25 18:42:35');
INSERT INTO users (id, username, student_id, name, role, password_hash, class_name, phone, email, status, created_at) VALUES (4, NULL, '曾宪弘', '230102311003', 'student', 'scrypt:32768:8:1$0DUqd87PL2uBTz6h$5f2d569eab55358132e574468a151d85dbd60fa0c73eba6084ec3bee17dba3e289a90313272f054678922c3cd0ae3f06ce7684eb3130f6e72abaffe0ecd1b19b', NULL, NULL, NULL, 'active', '2025-08-25 18:42:35');
INSERT INTO users (id, username, student_id, name, role, password_hash, class_name, phone, email, status, created_at) VALUES (5, NULL, '陈俊杰', '230102311004', 'student', 'scrypt:32768:8:1$p9OKqgAhFffEE7Z0$7419d59ddf973dc10db6186188e2e067eb3b596f68f3fcf2f9d4c43e293ec2dadeeec91ad8c0ae9e97c799adc6bfd24aa16094a079c8d364893194f19f2e391d', NULL, NULL, NULL, 'active', '2025-08-25 18:42:35');
INSERT INTO users (id, username, student_id, name, role, password_hash, class_name, phone, email, status, created_at) VALUES (6, NULL, '陈政道', '230102311005', 'student', 'scrypt:32768:8:1$LhpOhZGqlEPCLDxi$8476f8642a03758d9acd9d5cf04b8051eccb4c55765a44688f0b0f4f6aa85892db0f8cd513d1d8cfeb8d610d81a67a073958f3785e02257d969d38086ce4e291', NULL, NULL, NULL, 'active', '2025-08-25 18:42:35');
INSERT INTO users (id, username, student_id, name, role, password_hash, class_name, phone, email, status, created_at) VALUES (7, NULL, '陈梓豪', '230102311006', 'student', 'scrypt:32768:8:1$bTXCzbnCds0r8g64$fe8bb1c3400ecefc05e46c8d0bc526b9394622073707fa2b205d44a7edee06bfcb15d494cf24674e9f093b95bb78b64b569b1f02b3a796ab529f02b5d249bfb0', NULL, NULL, NULL, 'active', '2025-08-25 18:42:36');
INSERT INTO users (id, username, student_id, name, role, password_hash, class_name, phone, email, status, created_at) VALUES (8, NULL, '邓声鸿', '230102311007', 'student', 'scrypt:32768:8:1$GqUEr9g2m8YIBSZl$50509b8b4a6572755c29008c3eb7ccd1e04e49880720bb82363f0e1e8f2f0acd6fd876bc5475fb7e2ee289113361b7c1c4ec1384a4c7e0a7ac58f78290442080', NULL, NULL, NULL, 'active', '2025-08-25 18:42:36');
INSERT INTO users (id, username, student_id, name, role, password_hash, class_name, phone, email, status, created_at) VALUES (9, NULL, '何鸿耀', '230102311008', 'student', 'scrypt:32768:8:1$iQtwkniVaZxrNqeq$5e12bdead3a133bf90cfd1f232b1038efa61a864474f0e7576b75fe199ed7388c214af69323c11e253dfc61e935058b119a9f27df20cf125f1b774a56ad63671', NULL, NULL, NULL, 'active', '2025-08-25 18:42:36');
INSERT INTO users (id, username, student_id, name, role, password_hash, class_name, phone, email, status, created_at) VALUES (10, NULL, '黄锐锦', '230102311009', 'student', 'scrypt:32768:8:1$AJrHHr5axPxsv2j0$819922ac5e12c34d145a050e350c11be86a6482ceb2f97cbe58648e7f30fc6f8db092164ad969140cc20f94171a0cbb21f4ab66fb782fa10fbad52b5dc2327a7', NULL, NULL, NULL, 'active', '2025-08-25 18:42:36');
INSERT INTO users (id, username, student_id, name, role, password_hash, class_name, phone, email, status, created_at) VALUES (11, NULL, '黄梓泓', '230102311010', 'student', 'scrypt:32768:8:1$fWgQgshdtOJc0ypz$873117a9a9fcd6835246d9442dc1f1ff75541821323845dfc9f39758c594bed528d3b754645b62acad5be6c5ba2d44e66ad5d8f1b434989531842f102cb33fc4', NULL, NULL, NULL, 'active', '2025-08-25 18:42:36');
INSERT INTO users (id, username, student_id, name, role, password_hash, class_name, phone, email, status, created_at) VALUES (12, NULL, '康峻', '230102311011', 'student', 'scrypt:32768:8:1$vX0Hffx8VpdJndwn$441041d8164561ef1458d38647c6dc5b383748b8719bad2c2112672044e27e0bf5d2e40755d44ca3b4e0b591853c56c67cb4e3c639574d1e20e1d8605a52e070', NULL, NULL, NULL, 'active', '2025-08-25 18:42:37');
INSERT INTO users (id, username, student_id, name, role, password_hash, class_name, phone, email, status, created_at) VALUES (13, NULL, '赖彬瑜', '230102311012', 'student', 'scrypt:32768:8:1$o0Fm7yNPXF0sbOxB$65d07ef088c0399033df56c810b27816024236d9b121eb8b41b3fc70109e570dd03bf26b65b9f80620f28f4c01a5db58b18e8451218d8e12241541be1abb5785', NULL, NULL, NULL, 'active', '2025-08-25 18:42:37');
INSERT INTO users (id, username, student_id, name, role, password_hash, class_name, phone, email, status, created_at) VALUES (14, NULL, '李立丰', '230102311014', 'student', 'scrypt:32768:8:1$TSHFx0WnJeQlVFcu$0ea9ab64790fe9322cdf357bed0eb654a654f963b1430e30486f5b995dcac9bf96155ebf5e27d24b63310caa804798ed558518276f1c26fb40bc5cd38c1e7edb', NULL, NULL, NULL, 'active', '2025-08-25 18:42:37');
INSERT INTO users (id, username, student_id, name, role, password_hash, class_name, phone, email, status, created_at) VALUES (15, NULL, '李焱森', '230102311015', 'student', 'scrypt:32768:8:1$wbwygs8im7SUIFa2$51e673def80c1f38c6c0552efc6d1e7ef332d929843e096de373868784d9d5f42e3ca0230473731bb3ff3f7991caa89bdf8cc623879a48ecd0c1ba7df9af5f98', NULL, NULL, NULL, 'active', '2025-08-25 18:42:37');
INSERT INTO users (id, username, student_id, name, role, password_hash, class_name, phone, email, status, created_at) VALUES (16, NULL, '梁振伟', '230102311016', 'student', 'scrypt:32768:8:1$MmLKoa7wNZZyBiSJ$999d15ae5f25c5882274bb871336cc6d5fa702af14e92639ab720dd670e679179f5c32c139ef6e077596e0f9512b278b4b9aa767cd537470e4184eee43ed3b38', NULL, NULL, NULL, 'active', '2025-08-25 18:42:37');
INSERT INTO users (id, username, student_id, name, role, password_hash, class_name, phone, email, status, created_at) VALUES (17, NULL, '廖洪锋', '230102311017', 'student', 'scrypt:32768:8:1$fSJ23x9f1r09tQ1D$2fa8febaec9ed61241d91988717b72f7c6bdfbca1f51206f72936d3cdbc25523c08eb9892e2e1fda27acec0945215102481d75321cc4f9ff6bfbe389a48b98c5', NULL, NULL, NULL, 'active', '2025-08-25 18:42:38');
INSERT INTO users (id, username, student_id, name, role, password_hash, class_name, phone, email, status, created_at) VALUES (18, NULL, '廖思妮', '230102311018', 'student', 'scrypt:32768:8:1$MnyTEAgSz7kcZ4N4$fb4e34cd667a838b5b7c1770c90c0dbf66fa4ceff0b57dca2957fa766d6b3f27a037e53afa7b410bb3468ad8db492228ea5adfac8dd521d6c0702a70c958bc33', NULL, NULL, NULL, 'active', '2025-08-25 18:42:38');
INSERT INTO users (id, username, student_id, name, role, password_hash, class_name, phone, email, status, created_at) VALUES (19, NULL, '林振炎', '230102311019', 'student', 'scrypt:32768:8:1$zOD8QVXsdEBELWEk$0cfa52321786cefa50dc1d79920548d369e930b4e55e4108c001289c758a223b7207aa5d699744e54e9551d3406cf0e6448157956c85cadaf9622f7b540dd0f2', NULL, NULL, NULL, 'active', '2025-08-25 18:42:38');
INSERT INTO users (id, username, student_id, name, role, password_hash, class_name, phone, email, status, created_at) VALUES (20, NULL, '卢杭涛', '230102311020', 'student', 'scrypt:32768:8:1$UIiv8cALnrGHEMwj$be24c6c57dd334b6156b287b2045648f81dadd9ce640b8021c97f72318c1f45fb7f649ead1f5ff5f106b1877fb3b5b452e140998ee8b9eb90db1e5bb58b11fb4', NULL, NULL, NULL, 'active', '2025-08-25 18:42:38');
INSERT INTO users (id, username, student_id, name, role, password_hash, class_name, phone, email, status, created_at) VALUES (21, NULL, '莫宗明', '230102311021', 'student', 'scrypt:32768:8:1$UwkbypIXoarnJV6g$10bd997da6b88a875ccaf19b5a8435cca9983294fed8c139707dfee2b3873be2852cb9d2fbaf73a18b32e8ae2d914eb8db5a5a6e96d1caacef1527d5104cce01', NULL, NULL, NULL, 'active', '2025-08-25 18:42:38');
INSERT INTO users (id, username, student_id, name, role, password_hash, class_name, phone, email, status, created_at) VALUES (22, NULL, '彭佳荣', '230102311022', 'student', 'scrypt:32768:8:1$790va6daCsmY3WwJ$b6d3510caa9939b3f1dcf9dd7fb3e3dfc21aad455f52148e2f3cfc1462ad89841a890d3f540aa40383da6b870d1af98d507e4f2e41e6328df6acae41a5ce24da', NULL, NULL, NULL, 'active', '2025-08-25 18:42:39');
INSERT INTO users (id, username, student_id, name, role, password_hash, class_name, phone, email, status, created_at) VALUES (23, NULL, '宋抒恒', '230102311023', 'student', 'scrypt:32768:8:1$S3ardlfjs0R5ehQf$25e5f5cde37948aee0c3b1548ff149fb84ecc31ddd8baa1a821e99825cc0b0f690549aa28d1d019842c3740ba11a13725db678002fd62511808cd389d3f55390', NULL, NULL, NULL, 'active', '2025-08-25 18:42:39');
INSERT INTO users (id, username, student_id, name, role, password_hash, class_name, phone, email, status, created_at) VALUES (24, NULL, '苏述浩', '230102311024', 'student', 'scrypt:32768:8:1$moU0leMwViQPwdIX$dc67bdc81afe6019ebc5ac6aedce8e4a9bd830756dc88fddce370aa0cc2565ae671b99471584823a487584eef97ff430944fd9f1e4f7b973c9ded43f7d5b6696', NULL, NULL, NULL, 'active', '2025-08-25 18:42:39');
INSERT INTO users (id, username, student_id, name, role, password_hash, class_name, phone, email, status, created_at) VALUES (25, NULL, '王浩', '230102311025', 'student', 'scrypt:32768:8:1$zUsFG65rd0vcvdbb$dc51e08de3be1ad178e4506efb94521f7fd3f4b8e2a7945ff55a66db18fd0adf8dd9a6168a17c1b0f66092e170d6bbd954bd147061e99d817c59bb4da508c8ab', NULL, NULL, NULL, 'active', '2025-08-25 18:42:39');
INSERT INTO users (id, username, student_id, name, role, password_hash, class_name, phone, email, status, created_at) VALUES (26, NULL, '王睿', '230102311026', 'student', 'scrypt:32768:8:1$H4BvXHkiCUbPkjFm$bca538fad392c357e42211ab837a71c44c1a8c002b5b7491560cece154514020832ad80b51efa78618b635867e50a8fc663decab2d2ee939604c07bd72889dec', NULL, NULL, NULL, 'active', '2025-08-25 18:42:40');
INSERT INTO users (id, username, student_id, name, role, password_hash, class_name, phone, email, status, created_at) VALUES (27, NULL, '王梓润', '230102311027', 'student', 'scrypt:32768:8:1$CSyjFHSttehbdE4o$105eeb0ed2417169bf34d37f9e45f49f089f299f059c578504bba672e481d2b1913a854345aae578a1aa0fc57946e9b779eaa2db1987008def65d015ee79be1c', NULL, NULL, NULL, 'active', '2025-08-25 18:42:40');
INSERT INTO users (id, username, student_id, name, role, password_hash, class_name, phone, email, status, created_at) VALUES (28, NULL, '翁继桐', '230102311028', 'student', 'scrypt:32768:8:1$rpEjehZUFXmZIbd8$8459b7fcd63ed547dace5be4061b627f49d712a9a8c24ece87a7284702d6eff177de53d12451c806207fd4ffcc41d94371ca543156a2e863741b33046760d4b8', NULL, NULL, NULL, 'active', '2025-08-25 18:42:40');
INSERT INTO users (id, username, student_id, name, role, password_hash, class_name, phone, email, status, created_at) VALUES (29, NULL, '谢晔', '230102311029', 'student', 'scrypt:32768:8:1$a369jh1vIV9Ta4W0$5d09961f20d9e75977dd7e7ef8f36ff50d2addadd137ce3fc5d7fec37620f8f60649c73303a691caacc7914694d44d6f53e7b2c6c387124942c9a9c860c479ec', NULL, NULL, NULL, 'active', '2025-08-25 18:42:41');
INSERT INTO users (id, username, student_id, name, role, password_hash, class_name, phone, email, status, created_at) VALUES (30, NULL, '熊振华', '230102311030', 'student', 'scrypt:32768:8:1$VcRT7uGVHEBNuTk7$f759a583ed79dcbc4bf2c01d2a1d39fd630ed9447b946e10863156a1fd32a1d04d77e106be651f0cd6aef634b37fc199596485e27314d3bf95218b7388ea1964', NULL, NULL, NULL, 'active', '2025-08-25 18:42:41');
INSERT INTO users (id, username, student_id, name, role, password_hash, class_name, phone, email, status, created_at) VALUES (31, NULL, '杨德旺', '230102311031', 'student', 'scrypt:32768:8:1$WGZ7vSgTOkv61Lb3$b34fa814f62c06f7ff433a79bbbd75ef3ecd10d6f5a8345ff644a03097106ac38dd84ec2449ad9878fd893f6874d4f52db070932bac6143208c45b7ddf5bba53', NULL, NULL, NULL, 'active', '2025-08-25 18:42:41');
INSERT INTO users (id, username, student_id, name, role, password_hash, class_name, phone, email, status, created_at) VALUES (32, NULL, '张宏彬', '230102311032', 'student', 'scrypt:32768:8:1$3NvsL558ijewSZFs$983d2436608d2918d3cf7556503d1acf5fca2c3ff74e47495ec93731de3a3c608059495ab7e41ad5ccd464e2b3876ca97fe8011104e71d1d3a19cf458e3db8ec', NULL, NULL, NULL, 'active', '2025-08-25 18:42:41');
INSERT INTO users (id, username, student_id, name, role, password_hash, class_name, phone, email, status, created_at) VALUES (33, NULL, '钟人正', '230102311033', 'student', 'scrypt:32768:8:1$LBP09EX9eVmfM3N5$fdebe7e1cb0aac725c73c8e79317028d172862996775b654d3fcca68d57c36338064918b5e7d131f551b9d8555b0891c9dd3d633018d3a824a9566565247cd77', NULL, NULL, NULL, 'active', '2025-08-25 18:42:42');

-- 表数据: tokens
-- 导出时间: 2025-08-25 20:20:11
-- 记录数: 0

-- 表 tokens 无数据

-- 表数据: submissions
-- 导出时间: 2025-08-25 20:20:11
-- 记录数: 0

-- 表 submissions 无数据

